C51 COMPILER V9.52.0.0   FD612DRV_DOUBLE                                                   07/26/2018 17:42:19 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FD612DRV_DOUBLE
OBJECT MODULE PLACED IN .\Output\FD612Drv_double.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE APP\stdriver\FD612Drv_double.C LARGE BROWSE INCDIR(.\driver\inc;.\APP\in
                    -clude) DEBUG OBJECTEXTEND PRINT(.\list\FD612Drv_double.lst) TABS(2) OBJECT(.\Output\FD612Drv_double.obj)

line level    source

   1          /** 
   2          * @file       FD612Drv.C    数码管显示驱动芯片 客户代码
   3          * @brief       FD612 的驱动
   4          * @author      ywaby
   5          * @version     1B3 
   6          * @date       2014-03-31    
   7          * @note
   8          * @details  
   9          * @copyright Copyright (c) 2013 by FUZHOU FUDA HISI MICROELECTRONICS CO.,LTD.              
  10          */
  11          #define FD612DRV_GROBLE
  12          
  13          #include "FD612Drv_double.H"
  14          #include <stdio.h>
  15          #include <intrins.h>
  16          
  17          
  18          static void FD628_Delay10us()
  19          {
  20   1        unsigned char i;
  21   1      
  22   1        _nop_();
  23   1        i = 25;
  24   1        while (--i);
  25   1      }
  26          
  27          /** @addtogroup FD612_DRIVER FD612 驱动
  28            @{
  29          */
  30          #define   FD612_DELAY_LOW         FD612_DELAY_1US         ///<时钟低电平延时                        
  31          #define   FD612_DELAY_HIGH        FD612_DELAY_1US         ///<时钟高电平延时                                              
  32          #define   FD612_DELAY_WAIT        FD612_DELAY_1US         ///<数据读取等待时间
  33          #define   FD612_DELAY_SU_STA      FD612_DELAY_1US         ///<起始信号建立时间 
  34          #define   FD612_DELAY_HD_STA      FD612_DELAY_1US         ///<起始信号保持时间           
  35          #define   FD612_DELAY_SU_STO      FD612_DELAY_1US         ///<停止信号建立时间  
  36           /** 
  37           * @brief 数码管码值编码数组,依次对应的显示：0,1,2,3,4,5,6,7,8,9,A,b,C,d,E,F      
  38           */
  39          CONST INT8U DISP_TAB[0X10]={0x3f,0x06,0x5B,0x4F,0x66,0x6D,0x7d,0x07,0x7F,0x6F,0x77,0x7c,0x39,0x5e,0x79,0x7
             -1};
  40          /** @addtogroup  FD612_FUNCTION  函数
  41            @{
  42          */
  43          /** @addtogroup  FD612_COMMUNICATION  通信时序
  44            @{
  45          */
  46          /**
  47           *  @brief  启动FD612通信
  48           *  @param  void
  49           *  @return void
  50           *  @note   在SCL高电平期间捕获到SDA的下降沿，FD612开始通信   
  51           */
  52          static void FD612_Start(t_fd612_ops * ops )      
  53          {
C51 COMPILER V9.52.0.0   FD612DRV_DOUBLE                                                   07/26/2018 17:42:19 PAGE 2   

  54   1        ops->FD612_SDA_SET();          
  55   1        ops->FD612_SCL_SET();
  56   1        ops->FD612_SDA_D_OUT();        //设置SDA为输出方向 
  57   1        ops->FD612_SCL_D_OUT();        //设置SCL为输出方向  
  58   1        FD612_DELAY_SU_STA;
  59   1        ops->FD612_SDA_CLR();          //发送起始信号
  60   1        FD612_DELAY_HD_STA;      
  61   1        ops->FD612_SCL_CLR();          
  62   1        FD612_DELAY_LOW;
  63   1      }   
  64          
  65          /**
  66           *  @brief  停止FD612通信
  67           *  @param  void
  68           *  @return void
  69           *  @note   在SCL高电平期间捕获到SDA的上升沿，FD612停止通信  
  70           */
  71           static void FD612_Stop(t_fd612_ops* ops )
  72          {  
  73   1        ops->FD612_SCL_SET();           /* 设置SCL为高电平 */ 
  74   1        ops->FD612_SDA_CLR();           /* 设置SDA为低电平 */
  75   1        ops->FD612_SDA_D_OUT();           /* 设置SDA为输出方向 */
  76   1        FD612_DELAY_SU_STO;         /* 停止信号建立时间: */
  77   1        ops->FD612_SDA_SET();           /* 设置SDA为高电平 */
  78   1        ops->FD612_SDA_D_IN();          /* 设置SDA为输入方向 */
  79   1      }
  80          /**
  81           *  @brief  发送一个字节数据给FD612,并读取应答位
  82           *  @param  dat 发送的一字节数据
  83           *  @retval  BOOLEAN  
  84           *  @return 读取的ACK应答位
  85           *  @note   数据传输低位在前，高位在后
  86           */
  87          
  88           BOOLEAN FD612_WrByte( t_fd612_ops* ops,INT8U dat )
  89          {
  90   1        INT8U i;                /* 移位写出的位数寄存器 */
  91   1        BOOLEAN ACKTemp=0;
  92   1        ops->FD612_SDA_D_OUT();             /* 设置SDA为输出方向 */
  93   1        for( i = 0; i != 8; i++ )     /* 输出8 bit的数据 */        
  94   1        {      
  95   2          if( dat & 0x80 ) 
  96   2          {
  97   3              ops->FD612_SDA_SET();       /* 设置SDA为高电平 */
  98   3          }
  99   2          else 
 100   2          {
 101   3              ops->FD612_SDA_CLR();     /* 设置SDA为低电平 */
 102   3          }
 103   2        ops->FD612_SCL_SET();       /* 设置SCL为高电平 */
 104   2        dat <<= 1;          /* 输出数据右移一位，数据从高到低的输出 */
 105   2        FD612_DELAY_HIGH;           /* SCL时钟高电平时间：*/
 106   2        ops->FD612_SCL_CLR();       /* 设置SCL为低电平 */
 107   2        FD612_DELAY_LOW;  
 108   2        } 
 109   1        //////读取ACK位/////
 110   1        ops->FD612_SDA_SET();              /* 设置SDA为高电平 */      
 111   1        ops->FD612_SDA_D_IN();            /* 设置SDA为输入方向 */ 
 112   1        ops->FD612_SCL_SET();           /* SCL时钟的高电平时间：*/
 113   1        if(ops->FD612_SDA_IN()==0) ACKTemp=0; /* 读入1 bit值 */
 114   1        else ACKTemp=1; 
 115   1        FD612_DELAY_HIGH;                 /* SCL时钟高电平时间*/
C51 COMPILER V9.52.0.0   FD612DRV_DOUBLE                                                   07/26/2018 17:42:19 PAGE 3   

 116   1        ops->FD612_SCL_CLR();               /* SCL时钟的低电平*/
 117   1        FD612_DELAY_LOW;  
 118   1        return  ACKTemp ;  
 119   1      } 
 120          
 121          
 122          
 123          
 124          
 125          
 126          
 127          
 128          
 129          
 130          
 131          
 132          
 133          /**
 134           *  @brief  向FD612发送一字节的命令
 135           *  @param  CMD 发送一字节的命令
 136           *  @return void
 137           *  @note   CMD是控制命令中的宏
 138           *  @par Example 
 139           *  @code
 140           *  FD612_Command(FD612_7SEG_CMD);
 141           *  @endcode 
 142           */
 143          void FD612_Command(t_fd612_ops* ops, INT8U CMD )          
 144          {                 
 145   1        FD612_Start(ops);
 146   1        FD612_WrByte(ops,CMD);
 147   1        FD612_Stop(ops);  
 148   1      }
 149           /**
 150           *  @brief  刷新FD612的显示数据
 151           *  @param  void
 152           *  @return void
 153           *  @note   使用该函数需要打开 FD612_DISP_BUFF_EN
 154           */
 155          void FD612_DispDataRefresh(FD612_Struct_DispBuff* FD612_DispBuff,t_fd612_ops* ops)
 156          {
 157   1        INT8U i;
 158   1        FD612_Command(ops,FD612_ADDR_INC_DIGWR_CMD);  
 159   1        FD612_Start(ops);   
 160   1        FD612_WrByte(ops,FD612_DIGADDR_WRCMD|FD612_DISP_MIN_ADDR) ;
 161   1      #if FD628_NEGA_DISP==1
                for(i=FD612_DISP_MIN_ADDR;i<=FD612_DISP_MAX_ADDR;i++)
                  FD612_PotiveTNage(i,FD612_DispBuff->DispData[i], FD612_DispBuff); 
              #endif
 165   1        for(i=FD612_DISP_MIN_ADDR;i<=FD612_DISP_MAX_ADDR;i++)
 166   1          FD612_WrByte(ops,FD612_DispBuff->DispData[i]) ;
 167   1      
 168   1        FD612_Stop(ops);
 169   1      }
 170           /**
 171           *  @brief  刷新FD612的相关数据
 172           *  @param  void
 173           *  @return void
 174           *  @note    
 175           *  @note   使用该函数需要打开 FD612_DISP_BUFF_EN 
 176           */
 177          void FD612_Base_Refresh(FD612_Struct_DispBuff* FD612_DispBuff,t_fd612_ops* ops)
C51 COMPILER V9.52.0.0   FD612DRV_DOUBLE                                                   07/26/2018 17:42:19 PAGE 4   

 178          {
 179   1        FD612_Command(ops,FD612_DispBuff->DispSEG_MODE);
 180   1        FD612_DispDataRefresh(FD612_DispBuff,ops);
 181   1        FD612_Command(ops,FD612_DispBuff->DispState);
 182   1      } 
 183          #if 0
              void FD612_Top_Refresh(FD612_Struct_DispBuff* FD612_DispBuff,t_fd612_ops* ops)
              {
                FD612_Command(ops,FD612_DispBuff->DispSEG_MODE);
                FD612_DispDataRefresh(FD612_DispBuff,ops);
                FD612_Command(ops,FD612_DispBuff->DispState);
              }
              #endif
 191          /* @} FD612_API_FUNTION */
 192          #if FD612_DECODE_TAB_EN!=0
              
              #define FD612_DECODE_TAB_NUM 14*4 ///<FD612_DecodeTab[]的字符个数
              typedef struct 
              {
                INT8U Character; ///<字符
                INT8U Bitmap;     ///<字符对应的码值
              } Struct_LED_Bitmap; ///<数码管的码值和字符的对应结构体，用于查表
              ///<数码管的码值和字符的对应表格，用于查表
              CONST Struct_LED_Bitmap FD612_DecodeTab[FD612_DECODE_TAB_NUM] = {
                {'0', 0x3F}, {'1', 0x06}, {'2', 0x5B}, {'3', 0x4F},
                {'4', 0x66}, {'5', 0x6D}, {'6', 0x7D}, {'7', 0x07},
                {'8', 0x7F}, {'9', 0x6F}, {'a', 0x77}, {'A', 0x77},
                {'b', 0x7C}, {'B', 0x7C}, {'c', 0x39}, {'C', 0x39},
                {'d', 0x5E}, {'D', 0x5E}, {'e', 0x79}, {'E', 0X7b},
                {'f', 0x71}, {'F', 0x71}, {'g', 0x6F}, {'G', 0x3D},
                {'h', 0x74}, {'H', 0x76}, {'i', 0x04}, {'I', 0x06},
                {'j', 0x1E}, {'J', 0x1E}, {'l', 0x38}, {'L', 0x38},
                {'n', 0x54}, {'N', 0x37}, {'o', 0x5C}, {'O', 0x3F},
                {'p', 0x73}, {'P', 0x73}, {'q', 0x67}, {'Q', 0x67},
                {'r', 0x50}, {'R', 0x77}, {'s', 0x6D}, {'S', 0x6D},
                {'t', 0x78}, {'T', 0x31}, {'u', 0x3E}, {'U', 0x3E},
                {'y', 0x6E}, {'Y', 0x6E}, {'z', 0x5B}, {'Z', 0x5B},
                {':', 0xfe}, {'-', 0x40}, {'_', 0x08}, {' ', 0x00}
              };
              
              /**
               *  @brief  数码管的查表函数
               *  @param  cTemp 查找的字符
               *  @retval INT8U  
               *  @return 字符对应的数码管码值
               *  @note   使用该函数需要打开 FD612_DECODE_TAB_EN 
               *  @par Example
               *  @code
               *  char CTmp;
               *  CTmp=DispGetCode('S');
               *  @endcode 
               */ 
               
              INT8U DispGetCode(char cTemp)
              {
                INT8U i, Bitmap=0x00;
                for(i=0; i<FD612_DECODE_TAB_NUM; i++)
                {
                  if(FD612_DecodeTab[i].Character == cTemp)
                  {
                    Bitmap = FD612_DecodeTab[i].Bitmap;
                    break;
C51 COMPILER V9.52.0.0   FD612DRV_DOUBLE                                                   07/26/2018 17:42:19 PAGE 5   

                  }
                }
                return Bitmap;
              }
              #endif
 245          
 246          #if FD628_NEGA_DISP==0
 247          typedef struct 
 248          {
 249            INT8U NegaAddr; ///<对应的共阴数码管数据地址
 250            INT8U BitAddr;     ///<对应段地址
 251          } Struct_PotiveTNage_Bitmap; ///<数码管的码值和字符的对应结构体，用于查表
 252          ///<共阳对应共阴的表格，用于查表,根据具体的应用电路进行修改
 253          CONST Struct_PotiveTNage_Bitmap FD612_PotiveTNage_Bitmap[12][8] = {
 254              { {0x04,0x01},{0x05,0x01},{0x06,0x01},{0x07,0x01},  {0x08,0x01},{0x09,0x01},{0x0a,0x01},{0x0b,0x01}}, 
             -   //位4到11     
 255              { {0x04,0x02},{0x05,0x02},{0x06,0x02},{0x07,0x02},  {0x08,0x02},{0x09,0x02},{0x0a,0x02},{0x0b,0x02}}, 
             -   //  
 256              { {0x04,0x04},{0x05,0x04},{0x06,0x04},{0x07,0x04},  {0x08,0x04},{0x09,0x04},{0x0a,0x04},{0x0b,0x04}}, 
 257              { {0x04,0x08},{0x05,0x08},{0x06,0x08},{0x07,0x08},  {0x08,0x08},{0x09,0x08},{0x0a,0x08},{0x0b,0x08}},
 258          
 259              { {0x00,0x01},{0x01,0x01},{0x02,0x01},{0x03,0x01},  {0x08,0x10},{0x09,0x10},{0x0a,0x10},{0x0b,0x10}}, 
             -  //位0到3  8到11
 260              { {0x00,0x02},{0x01,0x02},{0x02,0x02},{0x03,0x02},  {0x08,0x20},{0x09,0x20},{0x0a,0x20},{0x0b,0x20}},
 261              { {0x00,0x04},{0x01,0x04},{0x02,0x04},{0x03,0x04},  {0x08,0x40},{0x09,0x40},{0x0a,0x40},{0x0b,0x40}},
 262              { {0x00,0x08},{0x01,0x08},{0x02,0x08},{0x03,0x08},  {0x08,0x80},{0x09,0x80},{0x0a,0x80},{0x0b,0x80}},
 263          
 264              { {0x00,0x10},{0x01,0x10},{0x02,0x10},{0x03,0x10},  {0x04,0x10},{0x05,0x10},{0x06,0x10},{0x07,0x10}}, 
             -  //位0到7
 265              { {0x00,0x20},{0x01,0x20},{0x02,0x20},{0x03,0x20},  {0x04,0x20},{0x05,0x20},{0x06,0x20},{0x07,0x20}},
 266              { {0x00,0x40},{0x01,0x40},{0x02,0x40},{0x03,0x40},  {0x04,0x40},{0x05,0x40},{0x06,0x40},{0x07,0x40}},
 267              { {0x00,0x80},{0x01,0x80},{0x02,0x80},{0x03,0x80},  {0x04,0x80},{0x05,0x80},{0x06,0x80},{0x07,0x80}}
 268          };
 269          
 270           /** @addtogroup FD612_API_FUNTION 
 271            @{
 272          */
 273          
 274          /** @addtogroup FD612_PT_API 共阳数码管应用函数
 275            @{
 276          */
 277            /**
 278           *  @brief  共阳数码管的某一位写入显示数据
 279           *  @param  Addr 共阳数码管的位
 280           *  @param  Dat   显示的数据
 281           *  @retval void  
 282           *  @return 
 283           *  @note   使用该函数需要打开 FD612_DECODE_TAB_EN FD612_DISP_BUFF_EN FD628_NEGA_DISP
 284           *  @par Example
 285           *  @code
 286           *  PotiveTNage(1,0X3F); //第一位数码管显示‘0’
 287           *  @endcode 
 288           */ 
 289          void FD612_PotiveTNage(INT8U Addr,INT8U Dat,FD612_Struct_DispBuff* FD612_DispBuff){
 290   1        INT8U i,j;
 291   1        for(i=0;i<8;i++){
 292   2          if(Dat&(0x01<<i))
 293   2          {
 294   3            j=FD612_PotiveTNage_Bitmap[Addr][i].NegaAddr;
 295   3            FD612_DispBuff->DispData[FD612_PotiveTNage_Bitmap[Addr][i].NegaAddr]|=FD612_PotiveTNage_Bitmap[Addr]
             -[i].BitAddr;
 296   3          }
C51 COMPILER V9.52.0.0   FD612DRV_DOUBLE                                                   07/26/2018 17:42:19 PAGE 6   

 297   2          else
 298   2            FD612_DispBuff->DispData[FD612_PotiveTNage_Bitmap[Addr][i].NegaAddr]&=(~FD612_PotiveTNage_Bitmap[Add
             -r][i].BitAddr);   
 299   2        }
 300   1      }
 301           
 302          
 303          
 304            
 305            /**
 306           *  @brief FD612 某个显示地址开始显示相应的字符串
 307           *  @param  Addr 字符串显示的起始地址
 308           *  @param  PStr 指向相应的字符串
 309           *  @retval INT8U  
 310           *  @return 返回函数执行结果,0为执行成功，1为起始地址超出最大地址
 311           *  @note   使用该函数需要打开 FD612_DECODE_TAB_EN 
 312           *  @par Example
 313           *  @code
 314           *  FD612_DispString(FD612_DIG3_ADDR,"FD612");
 315           *  @endcode 
 316           */ 
 317          #if FD612_DECODE_TAB_EN!=0
              INT8U FD612_DispString( INT8U Addr,char *PStr)
              {
                INT8U i;
                if (Addr>FD612_DISP_MAX_ADDR)return 1;
                FD612_Command(FD612_ADDR_INC_DIGWR_CMD);  
                FD612_Start();    
                FD612_WrByte(FD612_DIGADDR_WRCMD|Addr) ; 
                for(i=0;i+Addr<=FD612_DISP_MAX_ADDR;i++)
                {
                  if(PStr[i]=='\0')break;//判断是否到达字符串的尾部
                  FD612_DispBuff.DispData[i+Addr]=DispGetCode(PStr[i]);
                  FD612_WrByte(FD612_DispBuff.DispData[i+Addr]) ; 
                }
                FD612_Stop();
                return 0;
              }
              #endif
 335          /* @} FD612_NG_API */
 336          #endif
 337          /**
 338           *  @brief  初始化FD612
 339           *  @param  void
 340           *  @return void
 341           *  @note 用户程序开始时调用该函数对FD612进行初始化
 342           *  @note 用户可以根据需要进行修改
 343           *  @par Example
 344           *  @code 共阴参考
 345            INT8U i;
 346            FD612_8SEG_MODE;
 347            for(i=0;i<12;i++){
 348              FD612_DispBuff.DispData[i]= 0X00;
 349            }
 350             FD612_DispBuff.DispData[FD612_DIG1_ADDR]=FD612_DISP_F; 
 351             FD612_DispBuff.DispData[FD612_DIG2_ADDR]=FD612_DISP_d;   
 352            FD612_DispString(FD612_DIG3_ADDR,"612");
 353            FD612_DispStateWr(FD612_INTENS8|FD612_DISP_ON);  
 354            FD612_Refresh();
 355           *   @endcode 
 356           *   @code 共阳参考
 357            INT8U i;
C51 COMPILER V9.52.0.0   FD612DRV_DOUBLE                                                   07/26/2018 17:42:19 PAGE 7   

 358            FD612_8SEG_MODE;
 359            for(i=0;i<12;i++){
 360              FD612_DispBuff.DispData[i]= 0X00;
 361            }
 362           FD612_PotiveTNage(FD612_DIG1_ADDR,FD612_DISP_F);
 363           FD612_PotiveTNage(FD612_DIG2_ADDR,FD612_DISP_d);  
 364            FD612_DispString(FD612_DIG3_ADDR,"612");
 365            FD612_DispStateWr(FD612_INTENS8|FD612_DISP_ON);  
 366            FD612_Refresh();
 367           *  @endcode  
 368           */ 
 369           
 370            void FD612_Init( t_fd612_ops* ops,FD612_Struct_DispBuff* FD612_DispBuff)//<共阳参考
 371          {
 372   1        INT8U i;
 373   1        FD612_8SEG_MODE(ops,FD612_DispBuff);
 374   1        for(i=0;i<12;i++){
 375   2          FD612_DispBuff->DispData[i]= 0Xff;
 376   2        }
 377   1      
 378   1        FD612_DispStateWr(ops,FD612_DispBuff,FD612_INTENS8|FD612_DISP_ON); 
 379   1        //FD612_Refresh();
 380   1      }
 381          /* @} FD612_API_FUNTION */
 382          /* @} FD612_FUNTION */
 383          /* @} FD612_DRIVER */
 384          
 385          
 386          /******************* (C) COPYRIGHT 2013 FDHISI *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1130    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    208      43
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
