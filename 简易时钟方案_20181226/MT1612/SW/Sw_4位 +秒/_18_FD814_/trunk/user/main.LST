C51 COMPILER V9.52.0.0   MAIN                                                              06/06/2017 18:31:19 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE main.c LARGE BROWSE INCDIR(..\src;..\inc;.\src) DEBUG OBJECTEXTEND TABS(
                    -2) OBJECT(.\output\main.obj)

line level    source

   1          #include "myinclude.h"
   2          void  CfgFsys( )  
   3          {
   4   1      //    SAFE_MOD = 0x55;
   5   1      //    SAFE_MOD = 0xAA;
   6   1      //     CLOCK_CFG |= bOSC_EN_XT;                          //Ê¹ÄÜÍâ²¿¾§Õñ
   7   1      //     CLOCK_CFG &= ~bOSC_EN_INT;                        //¹Ø±ÕÄÚ²¿¾§Õñ    
   8   1          SAFE_MOD = 0x55;
   9   1          SAFE_MOD = 0xAA;
  10   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x07;  // 32MHz 
  11   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x06;  // 24MHz 
  12   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x05;  // 16MHz 
  13   1          CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x04;  // 12MHz
  14   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x03;  // 6MHz  
  15   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x02;  // 3MHz  
  16   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x01;  // 750KHz  
  17   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x00;  // 187.5MHz    
  18   1          SAFE_MOD = 0x00;
  19   1      }
  20          
  21          void UartInit(void)   //19200bps@22.1184MHz
  22          {
  23   1      #define  FREQ_SYS    12000000          //ÏµÍ³Ö÷Æµ12MHz
  24   1      #define  UART0_BUAD    19200
  25   1      #define  UART1_BUAD    19200
  26   1      
  27   1          UINT32 x;
  28   1          UINT8 x2; 
  29   1      
  30   1          SM0 = 0;
  31   1          SM1 = 1;
  32   1          SM2 = 0;                                                                   //´®¿Ú0Ê¹ÓÃÄ£Ê½1
  33   1                                                                                     //Ê¹ÓÃTimer1×÷Îª²¨ÌØÂÊ·¢ÉúÆ
             -÷
  34   1          RCLK = 0;                                                                  //UART0½ÓÊÕÊ±ÖÓ
  35   1          TCLK = 0;                                                                  //UART0·¢ËÍÊ±ÖÓ
  36   1          PCON |= SMOD;
  37   1          x = 10 * FREQ_SYS / UART0_BUAD / 16;                                       //Èç¹û¸ü¸ÄÖ÷Æµ£¬×¢ÒâxµÄÖµ²»
             -ÒªÒç³ö                            
  38   1          x2 = x % 10;
  39   1          x /= 10;
  40   1          if ( x2 >= 5 ) x ++;                                                       //ËÄÉáÎåÈë
  41   1      
  42   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20£¬Timer1×÷Îª8Î»×Ô¶¯ÖØ
             -ÔØ¶¨Ê±Æ÷
  43   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1Ê±ÖÓÑ¡Ôñ
  44   1          TH1 = 0-x;                                                                 //12MHz¾§Õñ,buad/12ÎªÊµ¼ÊÐè
             -ÉèÖÃ²¨ÌØÂÊ
  45   1          TR1 = 1;                                                                   //Æô¶¯¶¨Ê±Æ÷1
  46   1          TI = 1;
  47   1          REN = 1;                                                                   //´®¿Ú0½ÓÊÕÊ¹ÄÜ
  48   1        
  49   1        ES = 1;
  50   1        EA = 1;
C51 COMPILER V9.52.0.0   MAIN                                                              06/06/2017 18:31:19 PAGE 2   

  51   1      }
  52          
  53          char putchar (char ch)
  54          {
  55   1        SBUF = ch;    //²éÑ¯·¢ËÍ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃÏÂÃæ2ÌõÓï¾ä,µ«·¢ËÍÇ°ÐèTI=0
  56   1        TI = 0;
  57   1        while(TI ==0);
  58   1        TI = 0;
  59   1        return 1;
  60   1      }
  61          
  62          void TouchKeyInit(void)
  63          {
  64   1        P1_DIR_PU &= 0x0C;                                                         //ËùÓÐ´¥ÃþÍ¨µÀÉèÖÃÎª¸¡¿ÕÊäÈë£¬
             -ÓÃ²»µ½µÄÍ¨µÀ¿ÉÒÔ²»ÉèÖÃ
  65   1          TouchKeyQueryCyl2ms();                                                     //TouchKey²éÑ¯ÖÜÆÚ2ms  
  66   1      }
  67          
  68          void main(void)
  69          {
  70   1        unsigned long i = 0;
  71   1        CfgFsys( );
  72   1        UartInit();
  73   1        TouchKeyInit();
  74   1        printf( "FD814 ´®¿ÚÆô¶¯³É¹¦\n" );
  75   1      
  76   1          // while(1)                                                                   
  77   1          // {      
  78   1            // TouchKeyChannelQuery();                                                  //²éÑ¯´¥Ãþ°´¼ü×´Ì¬
  79   1            // delayms(200);                                                           //ÑÓÊ±ÎÞÒâÒå£¬Ä£Äâµ¥Æ¬»ú¸
             -ÉÆäËûÊÂ        
  80   1          // }
  81   1        // while(1) //·¢ËÍ½ÓÊÕµ½µÄÊý¾Ý
  82   1        // {
  83   1          // if(ReceiveDataBufe[ReadCnt].Flag)
  84   1          // {
  85   1            // ReceiveDataBufe[ReadCnt].Flag = 0;
  86   1            // printf("%c", ReceiveDataBufe[ReadCnt].Data);
  87   1      
  88   1            // ReadCnt++;
  89   1            // if(ReadCnt >= RECEIVE_LENGTH)
  90   1            // {
  91   1              // ReadCnt = 0;
  92   1            // }
  93   1          // }
  94   1        // }
  95   1        AppUsart_Init();
  96   1        while(1)
  97   1        {
  98   2          TouchKeyChannelQuery();
  99   2          AppUsart_Run();
 100   2        }
 101   1      }
 102          
 103          //-----------------------------------------------------------------------------
 104          //  ´®¿ÚÖÐ¶Ï´¦Àí³ÌÐò
 105          //-----------------------------------------------------------------------------
 106          void Uart_Isr() interrupt INT_NO_UART0 using 1
 107          {
 108   1        if(RI)  //½ÓÊÕÖÕ¶Ë
 109   1        {
 110   2          RI = 0; //Çå³ý±ê¼ÇÎ»
C51 COMPILER V9.52.0.0   MAIN                                                              06/06/2017 18:31:19 PAGE 3   

 111   2          ReceiveDataBufe[ReceiveCnt].Data = SBUF;
 112   2          ReceiveDataBufe[ReceiveCnt].Flag = 0x01;//±íÊ¾¿É¶Á
 113   2          ReceiveCnt++;
 114   2          if(ReceiveCnt >= RECEIVE_LENGTH)
 115   2          {
 116   3            ReceiveCnt = 0;
 117   3          }
 118   2        }
 119   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    312    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
