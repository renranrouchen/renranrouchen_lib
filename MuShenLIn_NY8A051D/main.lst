
                    Nyquest Technology Co., Ltd.

NYASM 2.14

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=ny8A051D,c=on
                                    1-    9     	#include "ny8A051D.inc"
                                    2-    2     #include "ny8a051a.inc"
                                    3-    1     ;; header file for NY8A051A assembly
                                    3-    2     ;;
                                    3-    3     ;; author    Ting
                                    3-    4     ;; date      2017.04.18
                                    3-    5     ;;/
                                    3-    7     #include "common.inc"
                                    4-    1     ;;----------------------------------------------
                                    4-    2     ;; header file for 8 bit series assembly
                                    4-    3     ;; author    Ting
                                    4-    4     ;; date      2017.04.11
                                    4-    5     ;;----------------------------------------------
                                    4-    6     ;;
                                    4-    7     ;; # constant definition
                                    4-    8     ;;
                                    4-    9     ;; ## instruction result store destination
                                    4-   10     ;;  - W: the result is stored in the ACC.
                                    4-   11     ;;  - F: the result is stored back in register.
                                    4-   12     ;;
                                    4-   13     W       EQU 0
                                    4-   13     ;W = 0
                                    4-   14     F       EQU 1
                                    4-   14     ;F = 1
                                    4-   16     ;; ## return from subroutine
                                    4-   17     ;;
                                    4-   18     RETURN      macro
                                    4-   19 M       ret
                                    4-   20 M       endm
                                    4-   22     ; vim:ft=asm:expandtab
                                    3-    9     ;; ## R-page SFR
                                    3-   10     ;;
                                    3-   11     INDF    EQU 0x0
                                    3-   11     ;INDF = 0
                                    3-   12     TMR0    EQU 0x1
                                    3-   12     ;TMR0 = 1
                                    3-   13     PCL     EQU 0x2
                                    3-   13     ;PCL = 2
                                    3-   14     STATUS  EQU 0x3
                                    3-   14     ;STATUS = 3
                                    3-   15     FSR     EQU 0x4
                                    3-   15     ;FSR = 4
                                    3-   17     PORTB   EQU 0x6
                                    3-   17     ;PORTB = 6
                                    3-   19     PCON    EQU 0x8
                                    3-   19     ;PCON = 8
                                    3-   20     BWUCON  EQU 0x9
                                    3-   20     ;BWUCON = 9
                                    3-   21     PCHBUF  EQU 0xa
                                    3-   21     ;PCHBUF = 10
                                    3-   22     BPLCON  EQU 0xb
                                    3-   22     ;BPLCON = 11
                                    3-   23     BPHCON  EQU 0xc
                                    3-   23     ;BPHCON = 12
                                    3-   25     INTE    EQU 0xe
                                    3-   25     ;INTE = 14
                                    3-   26     INTF    EQU 0xf
                                    3-   26     ;INTF = 15
                                    3-   28     ;; # macro
                                    3-   29     ;;
                                    3-   30     ;; macro use by SDCC
                                    3-   31     PAGESEL     macro   rom_address
                                    3-   32 M       endm
                                    3-   34     BANKSEL     macro   ram_address
                                    3-   35 M       endm
                                    3-   37     ; vim:ft=asm:expandtab
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_gpio_config
                                    1-   15     	extern	_led_init
                                    1-   16     	extern	_protect_data_enble
                                    1-   17     	extern	_Delay10us
                                    1-   18     	extern	_FD668_Command
                                    1-   19     	extern	_FD668_WrDisp_AddrINC
                                    1-   20     	extern	_FD668_WrDisp_AddrStatic
                                    1-   21     	extern	_FD668_Init
                                    1-   22     	extern	_delay
                                    1-   23     	extern	_FD668_WrByte
                                    1-   24     	extern	_PORTBbits
                                    1-   25     	extern	_PCONbits
                                    1-   26     	extern	_BWUCONbits
                                    1-   27     	extern	_BPLCONbits
                                    1-   28     	extern	_BPHCONbits
                                    1-   29     	extern	_INTEbits
                                    1-   30     	extern	_INTFbits
                                    1-   31     	extern	_FD668_DispData
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTB
                                    1-   38     	extern	_PCON
                                    1-   39     	extern	_BWUCON
                                    1-   40     	extern	_PCHBUF
                                    1-   41     	extern	_BPLCON
                                    1-   42     	extern	_BPHCON
                                    1-   43     	extern	_INTE
                                    1-   44     	extern	_INTF
                                    1-   45     	extern	_TMR1
                                    1-   46     	extern	_T1CR1
                                    1-   47     	extern	_T1CR2
                                    1-   48     	extern	_PWM1DUTY
                                    1-   49     	extern	_PS1CV
                                    1-   50     	extern	_BZ1CR
                                    1-   51     	extern	_IRCR
                                    1-   52     	extern	_TBHP
                                    1-   53     	extern	_TBHD
                                    1-   54     	extern	_OSCCR
                                    1-   55     	extern	_IOSTB
                                    1-   56     	extern	_PS0CV
                                    1-   57     	extern	_BODCON
                                    1-   58     	extern	_PCON1
                                    1-   59     	extern	_T0MD
                                    1-   60     	extern	__gptrput1
                                    1-   61     	extern	__sdcc_gsinit_startup
                                    1-   62     ;--------------------------------------------------------
                                    1-   63     ; global declarations
                                    1-   64     ;--------------------------------------------------------
                                    1-   65     	extern	_FD668_init
                                    1-   66     	extern	_FD668_DispTest
                                    1-   67     	extern	_main
                                    1-   68     	extern	_KeyNum
                                    1-   69     	extern	_ChooseFlg
                                    1-   70     	extern	_britness
                                    1-   72     	extern PSAVE
                                    1-   73     	extern SSAVE
                                    1-   74     	extern WSAVE
                                    1-   75     	extern STK12
                                    1-   76     	extern STK11
                                    1-   77     	extern STK10
                                    1-   78     	extern STK09
                                    1-   79     	extern STK08
                                    1-   80     	extern STK07
                                    1-   81     	extern STK06
                                    1-   82     	extern STK05
                                    1-   83     	extern STK04
                                    1-   84     	extern STK03
                                    1-   85     	extern STK02
                                    1-   86     	extern STK01
                                    1-   87     	extern STK00
                                    1-   89     .segment "uninit", 0x20000010
 20000010                           1-   90     PSAVE:
                                    1-   91     	.res 1
 20000011                           1-   92     SSAVE:
                                    1-   93     	.res 1
 20000012                           1-   94     WSAVE:
                                    1-   95     	.res 1
 20000013                           1-   96     STK12:
                                    1-   97     	.res 1
 20000014                           1-   98     STK11:
                                    1-   99     	.res 1
 20000015                           1-  100     STK10:
                                    1-  101     	.res 1
 20000016                           1-  102     STK09:
                                    1-  103     	.res 1
 20000017                           1-  104     STK08:
                                    1-  105     	.res 1
 20000018                           1-  106     STK07:
                                    1-  107     	.res 1
 20000019                           1-  108     STK06:
                                    1-  109     	.res 1
 2000001A                           1-  110     STK05:
                                    1-  111     	.res 1
 2000001B                           1-  112     STK04:
                                    1-  113     	.res 1
 2000001C                           1-  114     STK03:
                                    1-  115     	.res 1
 2000001D                           1-  116     STK02:
                                    1-  117     	.res 1
 2000001E                           1-  118     STK01:
                                    1-  119     	.res 1
 2000001F                           1-  120     STK00:
                                    1-  121     	.res 1
                                    1-  123     ;--------------------------------------------------------
                                    1-  124     ; global definitions
                                    1-  125     ;--------------------------------------------------------
                                    1-  126     ;--------------------------------------------------------
                                    1-  127     ; absolute symbol definitions
                                    1-  128     ;--------------------------------------------------------
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ; compiler-defined variables
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     .segment "uninit"
     0000                           1-  133     r0x100A:
                                    1-  134     	.res	1
                                    1-  135     .segment "uninit"
     0000                           1-  136     r0x100B:
                                    1-  137     	.res	1
                                    1-  138     .segment "uninit"
     0000                           1-  139     r0x100C:
                                    1-  140     	.res	1
                                    1-  141     ;--------------------------------------------------------
                                    1-  142     ; initialized data
                                    1-  143     ;--------------------------------------------------------
                                    1-  145     .segment "idata"
     0000                           1-  146     _KeyNum:
     0000 0000                      1-  147     	dw	0x00
                                    1-  151     .segment "idata"
     0000                           1-  152     _ChooseFlg:
     0000 0000                      1-  153     	dw	0x00
                                    1-  157     .segment "idata"
     0000                           1-  158     _britness:
     0000 0007                      1-  159     	dw	0x07
                                    1-  162     ;--------------------------------------------------------
                                    1-  163     ; overlayable items in internal ram 
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ;	udata_ovr
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ; reset vector 
                                    1-  168     ;--------------------------------------------------------
                                    1-  169     ORG	0x0000
     0000 3rrr                      1-  170     	goto	__sdcc_gsinit_startup
                                    1-  171     ;--------------------------------------------------------
                                    1-  172     ; code
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     ;***
                                    1-  175     ;  pBlock Stats: dbName = M
                                    1-  176     ;***
                                    1-  177     ;has an exit
                                    1-  178     ;functions called:
                                    1-  179     ;   _gpio_config
                                    1-  180     ;   _FD668_init
                                    1-  181     ;   _delay
                                    1-  182     ;   _FD668_DispTest
                                    1-  183     ;   _delay
                                    1-  184     ;   _FD668_DispTest
                                    1-  185     ;   _gpio_config
                                    1-  186     ;   _FD668_init
                                    1-  187     ;   _delay
                                    1-  188     ;   _FD668_DispTest
                                    1-  189     ;   _delay
                                    1-  190     ;   _FD668_DispTest
                                    1-  191     ;1 compiler assigned register :
                                    1-  192     ;   STK00
                                    1-  193     ;; Starting pCode block
                                    1-  194     .segment "code"; module=main, function=_main
     0000                           1-  196     _main:
                                    1-  197     ; 2 exit points
                                    1-  198     	.line	126, "main.c"; 	gpio_config();
                                    1-  199     	PAGESEL	_gpio_config
     0000 2rrr                      1-  200     	LCALL	_gpio_config
                                    1-  201     	PAGESEL	$
                                    1-  202     	.line	127, "main.c"; 	FD668_init();
                                    1-  203     	PAGESEL	_FD668_init
     0001 2rrr                      1-  204     	LCALL	_FD668_init
                                    1-  205     	PAGESEL	$
     0002                           1-  206     _00169_DS_:
                                    1-  207     	.line	132, "main.c"; 	if((PORTB & 0X08) == 0)
     0002 0Drr                      1-  208     	BTRSC	_PORTB,3
     0003 3rrr                      1-  209     	LGOTO	_00158_DS_
                                    1-  210     	.line	134, "main.c"; 	delay(100);
     0004 2164                      1-  211     	MOVIA	0x64
     0005 00rr                      1-  212     	MOVAR	STK00
     0006 2100                      1-  213     	MOVIA	0x00
                                    1-  214     	PAGESEL	_delay
     0007 2rrr                      1-  215     	LCALL	_delay
                                    1-  216     	PAGESEL	$
                                    1-  217     	.line	135, "main.c"; 	if((PORTB & 0X08) == 0)
     0008 0Drr                      1-  218     	BTRSC	_PORTB,3
     0009 3rrr                      1-  219     	LGOTO	_00154_DS_
                                    1-  220     	.line	137, "main.c"; 	KeyNum++;
     000A 05rr                      1-  221     	INCR	_KeyNum,F
                                    1-  222     	.line	138, "main.c"; 	if(KeyNum==3) KeyNum=0;
     000B 01rr                      1-  223     	MOVR	_KeyNum,W
     000C 2403                      1-  224     	XORIA	0x03
     000D 0D03                      1-  225     	BTRSC	STATUS,2
     000E 02rr                      1-  226     	CLRR	_KeyNum
                                    1-  227     	.line	139, "main.c"; 	FD668_DispTest();
                                    1-  228     	PAGESEL	_FD668_DispTest
     000F 2rrr                      1-  229     	LCALL	_FD668_DispTest
                                    1-  230     	PAGESEL	$
     0010                           1-  231     _00154_DS_:
                                    1-  232     	.line	141, "main.c"; 	while((PORTB & 0X08) == 0);
     0010 09rr                      1-  233     	BTRSS	_PORTB,3
     0011 3rrr                      1-  234     	LGOTO	_00154_DS_
     0012                           1-  235     _00158_DS_:
                                    1-  236     	.line	144, "main.c"; 	if((PORTB & 0X20) == 0)
     0012 0Err                      1-  237     	BTRSC	_PORTB,5
     0013 3rrr                      1-  238     	LGOTO	_00169_DS_
                                    1-  239     	.line	146, "main.c"; 	delay(100);
     0014 2164                      1-  240     	MOVIA	0x64
     0015 00rr                      1-  241     	MOVAR	STK00
     0016 2100                      1-  242     	MOVIA	0x00
                                    1-  243     	PAGESEL	_delay
     0017 2rrr                      1-  244     	LCALL	_delay
                                    1-  245     	PAGESEL	$
                                    1-  246     	.line	147, "main.c"; 	if((PORTB & 0X20) == 0)
     0018 0Err                      1-  247     	BTRSC	_PORTB,5
     0019 3rrr                      1-  248     	LGOTO	_00163_DS_
                                    1-  249     	.line	149, "main.c"; 	britness++;
     001A 05rr                      1-  250     	INCR	_britness,F
                                    1-  251     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1-  252     	.line	150, "main.c"; 	if(britness>=8) britness=0;
     001B 2108                      1-  253     	MOVIA	0x08
     001C 04rr                      1-  254     	SUBAR	_britness,W
     001D 0C03                      1-  255     	BTRSC	STATUS,0
     001E 02rr                      1-  256     	CLRR	_britness
                                    1-  257     	.line	151, "main.c"; 	FD668_DispTest();
                                    1-  258     	PAGESEL	_FD668_DispTest
     001F 2rrr                      1-  259     	LCALL	_FD668_DispTest
                                    1-  260     	PAGESEL	$
     0020                           1-  261     _00163_DS_:
                                    1-  262     	.line	153, "main.c"; 	while((PORTB & 0X20) == 0);
     0020 0Arr                      1-  263     	BTRSS	_PORTB,5
     0021 3rrr                      1-  264     	LGOTO	_00163_DS_
     0022 3rrr                      1-  265     	LGOTO	_00169_DS_
                                    1-  266     	.line	157, "main.c"; 	}
                                    1-  267     	RETURN	
     0023 0010                      4-   19 m1      ret
                                    1-  268     ; exit point of _main
                                    1-  270     ;***
                                    1-  271     ;  pBlock Stats: dbName = C
                                    1-  272     ;***
                                    1-  273     ;has an exit
                                    1-  274     ;functions called:
                                    1-  275     ;   _FD668_Command
                                    1-  276     ;   _FD668_Command
                                    1-  277     ;   __gptrput1
                                    1-  278     ;   _FD668_WrDisp_AddrINC
                                    1-  279     ;   _FD668_Command
                                    1-  280     ;   _FD668_Command
                                    1-  281     ;   __gptrput1
                                    1-  282     ;   _FD668_WrDisp_AddrINC
                                    1-  283     ;   _FD668_Command
                                    1-  284     ;   _FD668_Command
                                    1-  285     ;   _FD668_WrDisp_AddrINC
                                    1-  286     ;   _FD668_Command
                                    1-  287     ;   _FD668_Command
                                    1-  288     ;   _FD668_WrDisp_AddrINC
                                    1-  289     ;   _FD668_Command
                                    1-  290     ;   _FD668_Command
                                    1-  291     ;   _FD668_WrDisp_AddrINC
                                    1-  292     ;   _FD668_Command
                                    1-  293     ;   _FD668_Command
                                    1-  294     ;   _FD668_WrDisp_AddrINC
                                    1-  295     ;   _FD668_Command
                                    1-  296     ;   _FD668_Command
                                    1-  297     ;   __gptrput1
                                    1-  298     ;   _FD668_WrDisp_AddrINC
                                    1-  299     ;   _FD668_Command
                                    1-  300     ;   _FD668_Command
                                    1-  301     ;   __gptrput1
                                    1-  302     ;   _FD668_WrDisp_AddrINC
                                    1-  303     ;   _FD668_Command
                                    1-  304     ;   _FD668_Command
                                    1-  305     ;   _FD668_WrDisp_AddrINC
                                    1-  306     ;   _FD668_Command
                                    1-  307     ;   _FD668_Command
                                    1-  308     ;   _FD668_WrDisp_AddrINC
                                    1-  309     ;   _FD668_Command
                                    1-  310     ;   _FD668_Command
                                    1-  311     ;   _FD668_WrDisp_AddrINC
                                    1-  312     ;   _FD668_Command
                                    1-  313     ;   _FD668_Command
                                    1-  314     ;   _FD668_WrDisp_AddrINC
                                    1-  315     ;6 compiler assigned registers:
                                    1-  316     ;   r0x100A
                                    1-  317     ;   r0x100B
                                    1-  318     ;   r0x100C
                                    1-  319     ;   STK02
                                    1-  320     ;   STK01
                                    1-  321     ;   STK00
                                    1-  322     ;; Starting pCode block
                                    1-  323     .segment "code"; module=main, function=_FD668_DispTest
                                    1-  325     ;local variable name mapping:
     0000                           1-  328     _FD668_DispTest:
                                    1-  329     ; 2 exit points
                                    1-  330     	.line	38, "main.c"; 	state = KeyNum ;
     0000 01rr                      1-  331     	MOVR	_KeyNum,W
     0001 00rr                      1-  332     	MOVAR	r0x100A
                                    1-  333     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  334     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1-  335     	.line	39, "main.c"; 	switch (state)
     0002 2103                      1-  336     	MOVIA	0x03
     0003 04rr                      1-  337     	SUBAR	r0x100A,W
     0004 0C03                      1-  338     	BTRSC	STATUS,0
     0005 3rrr                      1-  339     	LGOTO	_00125_DS_
                                    1-  340     ;;genSkipc:3392: created from rifx:025A6160
     0006 21rr                      1-  341     	MOVIA	((_00145_DS_ >> 8) & 0xff)
     0007 008A                      1-  342     	MOVAR	PCHBUF
     0008 01rr                      1-  343     	MOVR	r0x100A,W
     0009 25rr                      1-  344     	ADDIA	_00145_DS_
     000A 0C03                      1-  345     	BTRSC	STATUS,0
     000B 058A                      1-  346     	INCR	PCHBUF,F
     000C 0082                      1-  347     	MOVAR	PCL
     000D                           1-  348     _00145_DS_:
     000D 3rrr                      1-  349     	LGOTO	_00114_DS_
     000E 3rrr                      1-  350     	LGOTO	_00117_DS_
     000F 3rrr                      1-  351     	LGOTO	_00118_DS_
     0010                           1-  352     _00114_DS_:
                                    1-  353     	.line	43, "main.c"; 	CHOOSEONE;
     0010 02rr                      1-  354     	CLRR	_ChooseFlg
                                    1-  355     	.line	44, "main.c"; 	FD668_7DIG_MODE;
     0011 2103                      1-  356     	MOVIA	0x03
                                    1-  357     	PAGESEL	_FD668_Command
     0012 2rrr                      1-  358     	LCALL	_FD668_Command
                                    1-  359     	PAGESEL	$
                                    1-  360     	.line	45, "main.c"; 	FD668_Disp_Brightness_SET(0x08 |britness);
     0013 210F                      1-  361     	MOVIA	0x0f
     0014 10rr                      1-  362     	ANDAR	_britness,W
     0015 00rr                      1-  363     	MOVAR	r0x100A
     0016 2188                      1-  364     	MOVIA	0x88
     0017 11rr                      1-  365     	IORAR	r0x100A,F
     0018 01rr                      1-  366     	MOVR	r0x100A,W
                                    1-  367     	PAGESEL	_FD668_Command
     0019 2rrr                      1-  368     	LCALL	_FD668_Command
                                    1-  369     	PAGESEL	$
                                    1-  370     	.line	46, "main.c"; 	for(i=0;i<7;i++)
     001A 02rr                      1-  371     	CLRR	r0x100A
     001B                           1-  372     _00121_DS_:
                                    1-  373     	.line	48, "main.c"; 	FD668_DispData[i]=0xff ;
     001B 01rr                      1-  374     	MOVR	r0x100A,W
     001C 25rr                      1-  375     	ADDIA	(_FD668_DispData + 0)
     001D 00rr                      1-  376     	MOVAR	r0x100B
     001E 21rr                      1-  377     	MOVIA	((_FD668_DispData + 0) >> 8) & 0xff
     001F 0C03                      1-  378     	BTRSC	STATUS,0
     0020 2501                      1-  379     	ADDIA	0x01
     0021 00rr                      1-  380     	MOVAR	r0x100C
     0022 21FF                      1-  381     	MOVIA	0xff
     0023 00rr                      1-  382     	MOVAR	STK02
     0024 01rr                      1-  383     	MOVR	r0x100B,W
     0025 00rr                      1-  384     	MOVAR	STK01
     0026 01rr                      1-  385     	MOVR	r0x100C,W
     0027 00rr                      1-  386     	MOVAR	STK00
     0028 2100                      1-  387     	MOVIA	0x00
                                    1-  388     	PAGESEL	__gptrput1
     0029 2rrr                      1-  389     	LCALL	__gptrput1
                                    1-  390     	PAGESEL	$
                                    1-  391     	.line	46, "main.c"; 	for(i=0;i<7;i++)
     002A 05rr                      1-  392     	INCR	r0x100A,F
                                    1-  393     ;;unsigned compare: left < lit (0x7=7), size=1
     002B 2107                      1-  394     	MOVIA	0x07
     002C 04rr                      1-  395     	SUBAR	r0x100A,W
     002D 0803                      1-  396     	BTRSS	STATUS,0
     002E 3rrr                      1-  397     	LGOTO	_00121_DS_
                                    1-  398     ;;genSkipc:3392: created from rifx:025A6160
                                    1-  399     	.line	50, "main.c"; 	FD668_WrDisp_AddrINC(0x00);
     002F 2100                      1-  400     	MOVIA	0x00
                                    1-  401     	PAGESEL	_FD668_WrDisp_AddrINC
     0030 2rrr                      1-  402     	LCALL	_FD668_WrDisp_AddrINC
                                    1-  403     	PAGESEL	$
                                    1-  404     	.line	52, "main.c"; 	CHOOSETWO;
     0031 2101                      1-  405     	MOVIA	0x01
     0032 00rr                      1-  406     	MOVAR	_ChooseFlg
                                    1-  407     	.line	53, "main.c"; 	FD668_7DIG_MODE;
     0033 2103                      1-  408     	MOVIA	0x03
                                    1-  409     	PAGESEL	_FD668_Command
     0034 2rrr                      1-  410     	LCALL	_FD668_Command
                                    1-  411     	PAGESEL	$
                                    1-  412     	.line	54, "main.c"; 	FD668_Disp_Brightness_SET(0x08 |britness);
     0035 210F                      1-  413     	MOVIA	0x0f
     0036 10rr                      1-  414     	ANDAR	_britness,W
     0037 00rr                      1-  415     	MOVAR	r0x100A
     0038 2188                      1-  416     	MOVIA	0x88
     0039 11rr                      1-  417     	IORAR	r0x100A,F
     003A 01rr                      1-  418     	MOVR	r0x100A,W
                                    1-  419     	PAGESEL	_FD668_Command
     003B 2rrr                      1-  420     	LCALL	_FD668_Command
                                    1-  421     	PAGESEL	$
                                    1-  422     	.line	55, "main.c"; 	for(i=0;i<7;i++)
     003C 02rr                      1-  423     	CLRR	r0x100A
     003D                           1-  424     _00123_DS_:
                                    1-  425     	.line	57, "main.c"; 	FD668_DispData[i]=0xff ;
     003D 01rr                      1-  426     	MOVR	r0x100A,W
     003E 25rr                      1-  427     	ADDIA	(_FD668_DispData + 0)
     003F 00rr                      1-  428     	MOVAR	r0x100B
     0040 21rr                      1-  429     	MOVIA	((_FD668_DispData + 0) >> 8) & 0xff
     0041 0C03                      1-  430     	BTRSC	STATUS,0
     0042 2501                      1-  431     	ADDIA	0x01
     0043 00rr                      1-  432     	MOVAR	r0x100C
     0044 21FF                      1-  433     	MOVIA	0xff
     0045 00rr                      1-  434     	MOVAR	STK02
     0046 01rr                      1-  435     	MOVR	r0x100B,W
     0047 00rr                      1-  436     	MOVAR	STK01
     0048 01rr                      1-  437     	MOVR	r0x100C,W
     0049 00rr                      1-  438     	MOVAR	STK00
     004A 2100                      1-  439     	MOVIA	0x00
                                    1-  440     	PAGESEL	__gptrput1
     004B 2rrr                      1-  441     	LCALL	__gptrput1
                                    1-  442     	PAGESEL	$
                                    1-  443     	.line	55, "main.c"; 	for(i=0;i<7;i++)
     004C 05rr                      1-  444     	INCR	r0x100A,F
                                    1-  445     ;;unsigned compare: left < lit (0x7=7), size=1
     004D 2107                      1-  446     	MOVIA	0x07
     004E 04rr                      1-  447     	SUBAR	r0x100A,W
     004F 0803                      1-  448     	BTRSS	STATUS,0
     0050 3rrr                      1-  449     	LGOTO	_00123_DS_
                                    1-  450     ;;genSkipc:3392: created from rifx:025A6160
                                    1-  451     	.line	59, "main.c"; 	FD668_WrDisp_AddrINC(0x00);
     0051 2100                      1-  452     	MOVIA	0x00
                                    1-  453     	PAGESEL	_FD668_WrDisp_AddrINC
     0052 2rrr                      1-  454     	LCALL	_FD668_WrDisp_AddrINC
                                    1-  455     	PAGESEL	$
                                    1-  456     	.line	60, "main.c"; 	break;
     0053 3rrr                      1-  457     	LGOTO	_00125_DS_
     0054                           1-  458     _00117_DS_:
                                    1-  459     	.line	64, "main.c"; 	CHOOSEONE;
     0054 02rr                      1-  460     	CLRR	_ChooseFlg
                                    1-  461     	.line	65, "main.c"; 	FD668_7DIG_MODE;
     0055 2103                      1-  462     	MOVIA	0x03
                                    1-  463     	PAGESEL	_FD668_Command
     0056 2rrr                      1-  464     	LCALL	_FD668_Command
                                    1-  465     	PAGESEL	$
                                    1-  466     	.line	66, "main.c"; 	FD668_Disp_Brightness_SET(0x08 |britness);
     0057 210F                      1-  467     	MOVIA	0x0f
     0058 10rr                      1-  468     	ANDAR	_britness,W
     0059 00rr                      1-  469     	MOVAR	r0x100A
     005A 2188                      1-  470     	MOVIA	0x88
     005B 11rr                      1-  471     	IORAR	r0x100A,F
     005C 01rr                      1-  472     	MOVR	r0x100A,W
                                    1-  473     	PAGESEL	_FD668_Command
     005D 2rrr                      1-  474     	LCALL	_FD668_Command
                                    1-  475     	PAGESEL	$
                                    1-  476     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  477     	.line	67, "main.c"; 	FD668_DispData[0]=DISP_BIT_A | DISP_BIT_D| DISP_BIT_G;  
     005E 2149                      1-  478     	MOVIA	0x49
     005F 00rr                      1-  479     	MOVAR	(_FD668_DispData + 0)
                                    1-  480     	.line	68, "main.c"; 	FD668_DispData[1]=DISP_BIT_A | DISP_BIT_D| DISP_BIT_G;
     0060 00rr                      1-  481     	MOVAR	(_FD668_DispData + 1)
                                    1-  482     	.line	69, "main.c"; 	FD668_DispData[2]=DISP_BIT_A | DISP_BIT_D| DISP_BIT_G;
     0061 00rr                      1-  483     	MOVAR	(_FD668_DispData + 2)
                                    1-  484     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  485     	.line	70, "main.c"; 	FD668_DispData[3]=DISP_BIT_A | DISP_BIT_D| DISP_BIT_G;
     0062 2149                      1-  486     	MOVIA	0x49
     0063 00rr                      1-  487     	MOVAR	(_FD668_DispData + 3)
                                    1-  488     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  489     	.line	71, "main.c"; 	FD668_DispData[4]= DISP_BIT_F | DISP_BIT_C;  													  //W3 W6
     0064 2124                      1-  490     	MOVIA	0x24
     0065 00rr                      1-  491     	MOVAR	(_FD668_DispData + 4)
                                    1-  492     	.line	72, "main.c"; 	FD668_DispData[5]=DISP_BIT_F | DISP_BIT_C;; 														//W11 W14
     0066 00rr                      1-  493     	MOVAR	(_FD668_DispData + 5)
                                    1-  494     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  495     	.line	73, "main.c"; 	FD668_DispData[6]=DISP_BIT_A | DISP_BIT_B| DISP_BIT_G| DISP_BIT_DP ;	  //W17 W18 W23 W24
     0067 21C3                      1-  496     	MOVIA	0xc3
     0068 00rr                      1-  497     	MOVAR	(_FD668_DispData + 6)
                                    1-  498     	.line	74, "main.c"; 	FD668_WrDisp_AddrINC(0x00);
     0069 2100                      1-  499     	MOVIA	0x00
                                    1-  500     	PAGESEL	_FD668_WrDisp_AddrINC
     006A 2rrr                      1-  501     	LCALL	_FD668_WrDisp_AddrINC
                                    1-  502     	PAGESEL	$
                                    1-  503     	.line	76, "main.c"; 	CHOOSETWO;
     006B 2101                      1-  504     	MOVIA	0x01
     006C 00rr                      1-  505     	MOVAR	_ChooseFlg
                                    1-  506     	.line	77, "main.c"; 	FD668_7DIG_MODE;
     006D 2103                      1-  507     	MOVIA	0x03
                                    1-  508     	PAGESEL	_FD668_Command
     006E 2rrr                      1-  509     	LCALL	_FD668_Command
                                    1-  510     	PAGESEL	$
                                    1-  511     	.line	78, "main.c"; 	FD668_Disp_Brightness_SET(0x08 |britness);
     006F 210F                      1-  512     	MOVIA	0x0f
     0070 10rr                      1-  513     	ANDAR	_britness,W
     0071 00rr                      1-  514     	MOVAR	r0x100A
     0072 2188                      1-  515     	MOVIA	0x88
     0073 11rr                      1-  516     	IORAR	r0x100A,F
     0074 01rr                      1-  517     	MOVR	r0x100A,W
                                    1-  518     	PAGESEL	_FD668_Command
     0075 2rrr                      1-  519     	LCALL	_FD668_Command
                                    1-  520     	PAGESEL	$
                                    1-  521     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  522     	.line	79, "main.c"; 	FD668_DispData[0]=	DISP_BIT_A | DISP_BIT_D | DISP_BIT_G;
     0076 2149                      1-  523     	MOVIA	0x49
     0077 00rr                      1-  524     	MOVAR	(_FD668_DispData + 0)
                                    1-  525     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  526     	.line	80, "main.c"; 	FD668_DispData[1]=	DISP_BIT_A | DISP_BIT_D | DISP_BIT_G | DISP_BIT_DP ; //B2
     0078 21C9                      1-  527     	MOVIA	0xc9
     0079 00rr                      1-  528     	MOVAR	(_FD668_DispData + 1)
                                    1-  529     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  530     	.line	81, "main.c"; 	FD668_DispData[2]=	DISP_BIT_A | DISP_BIT_D | DISP_BIT_G;
     007A 2149                      1-  531     	MOVIA	0x49
     007B 00rr                      1-  532     	MOVAR	(_FD668_DispData + 2)
                                    1-  533     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  534     	.line	82, "main.c"; 	FD668_DispData[3]=	DISP_BIT_A | DISP_BIT_D | DISP_BIT_G | DISP_BIT_DP;  //B4
     007C 21C9                      1-  535     	MOVIA	0xc9
     007D 00rr                      1-  536     	MOVAR	(_FD668_DispData + 3)
                                    1-  537     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  538     	.line	83, "main.c"; 	FD668_DispData[4]=	DISP_BIT_B | DISP_BIT_D | DISP_BIT_E | DISP_BIT_DP;  // B6 B8 B9 B12
     007E 219A                      1-  539     	MOVIA	0x9a
     007F 00rr                      1-  540     	MOVAR	(_FD668_DispData + 4)
                                    1-  541     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  542     	.line	84, "main.c"; 	FD668_DispData[5]=	DISP_BIT_A | DISP_BIT_B | DISP_BIT_E | DISP_BIT_F; 	 // W25 W26 W29 W30
     0080 2133                      1-  543     	MOVIA	0x33
     0081 00rr                      1-  544     	MOVAR	(_FD668_DispData + 5)
                                    1-  545     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  546     	.line	85, "main.c"; 	FD668_DispData[6]=	DISP_BIT_A | DISP_BIT_B;														 // DP1 DP2	
     0082 2103                      1-  547     	MOVIA	0x03
     0083 00rr                      1-  548     	MOVAR	(_FD668_DispData + 6)
                                    1-  549     	.line	86, "main.c"; 	FD668_WrDisp_AddrINC(0x00);
     0084 2100                      1-  550     	MOVIA	0x00
                                    1-  551     	PAGESEL	_FD668_WrDisp_AddrINC
     0085 2rrr                      1-  552     	LCALL	_FD668_WrDisp_AddrINC
                                    1-  553     	PAGESEL	$
                                    1-  554     	.line	87, "main.c"; 	break;
     0086 3rrr                      1-  555     	LGOTO	_00125_DS_
     0087                           1-  556     _00118_DS_:
                                    1-  557     	.line	91, "main.c"; 	CHOOSEONE;
     0087 02rr                      1-  558     	CLRR	_ChooseFlg
                                    1-  559     	.line	92, "main.c"; 	FD668_7DIG_MODE;
     0088 2103                      1-  560     	MOVIA	0x03
                                    1-  561     	PAGESEL	_FD668_Command
     0089 2rrr                      1-  562     	LCALL	_FD668_Command
                                    1-  563     	PAGESEL	$
                                    1-  564     	.line	93, "main.c"; 	FD668_Disp_Brightness_SET(0x08 |britness);
     008A 210F                      1-  565     	MOVIA	0x0f
     008B 10rr                      1-  566     	ANDAR	_britness,W
     008C 00rr                      1-  567     	MOVAR	r0x100A
     008D 2188                      1-  568     	MOVIA	0x88
     008E 11rr                      1-  569     	IORAR	r0x100A,F
     008F 01rr                      1-  570     	MOVR	r0x100A,W
                                    1-  571     	PAGESEL	_FD668_Command
     0090 2rrr                      1-  572     	LCALL	_FD668_Command
                                    1-  573     	PAGESEL	$
                                    1-  574     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  575     	.line	94, "main.c"; 	FD668_DispData[0]=DISP_BIT_B | DISP_BIT_C| DISP_BIT_E | DISP_BIT_F;  
     0091 2136                      1-  576     	MOVIA	0x36
     0092 00rr                      1-  577     	MOVAR	(_FD668_DispData + 0)
                                    1-  578     	.line	95, "main.c"; 	FD668_DispData[1]=DISP_BIT_B | DISP_BIT_C| DISP_BIT_E | DISP_BIT_F;
     0093 00rr                      1-  579     	MOVAR	(_FD668_DispData + 1)
                                    1-  580     	.line	96, "main.c"; 	FD668_DispData[2]=DISP_BIT_B | DISP_BIT_C| DISP_BIT_E | DISP_BIT_F;
     0094 00rr                      1-  581     	MOVAR	(_FD668_DispData + 2)
                                    1-  582     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  583     	.line	97, "main.c"; 	FD668_DispData[3]=DISP_BIT_B | DISP_BIT_C| DISP_BIT_E | DISP_BIT_F;
     0095 2136                      1-  584     	MOVIA	0x36
     0096 00rr                      1-  585     	MOVAR	(_FD668_DispData + 3)
                                    1-  586     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  587     	.line	98, "main.c"; 	FD668_DispData[4]= DISP_BIT_A | DISP_BIT_D | DISP_BIT_G;  							//W1 W4 W7
     0097 2149                      1-  588     	MOVIA	0x49
     0098 00rr                      1-  589     	MOVAR	(_FD668_DispData + 4)
                                    1-  590     	.line	99, "main.c"; 	FD668_DispData[5]=DISP_BIT_A | DISP_BIT_D | DISP_BIT_G;								//W9 W12 W15
     0099 00rr                      1-  591     	MOVAR	(_FD668_DispData + 5)
                                    1-  592     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  593     	.line	100, "main.c"; 	FD668_DispData[6]=DISP_BIT_A | DISP_BIT_B | DISP_BIT_E| DISP_BIT_F ;	  //W17 W18 W21 W22
     009A 2133                      1-  594     	MOVIA	0x33
     009B 00rr                      1-  595     	MOVAR	(_FD668_DispData + 6)
                                    1-  596     	.line	101, "main.c"; 	FD668_WrDisp_AddrINC(0x00);
     009C 2100                      1-  597     	MOVIA	0x00
                                    1-  598     	PAGESEL	_FD668_WrDisp_AddrINC
     009D 2rrr                      1-  599     	LCALL	_FD668_WrDisp_AddrINC
                                    1-  600     	PAGESEL	$
                                    1-  601     	.line	105, "main.c"; 	CHOOSETWO;
     009E 2101                      1-  602     	MOVIA	0x01
     009F 00rr                      1-  603     	MOVAR	_ChooseFlg
                                    1-  604     	.line	106, "main.c"; 	FD668_7DIG_MODE;
     00A0 2103                      1-  605     	MOVIA	0x03
                                    1-  606     	PAGESEL	_FD668_Command
     00A1 2rrr                      1-  607     	LCALL	_FD668_Command
                                    1-  608     	PAGESEL	$
                                    1-  609     	.line	107, "main.c"; 	FD668_Disp_Brightness_SET(0x08 |britness);
     00A2 210F                      1-  610     	MOVIA	0x0f
     00A3 10rr                      1-  611     	ANDAR	_britness,W
     00A4 00rr                      1-  612     	MOVAR	r0x100A
     00A5 2188                      1-  613     	MOVIA	0x88
     00A6 11rr                      1-  614     	IORAR	r0x100A,F
     00A7 01rr                      1-  615     	MOVR	r0x100A,W
                                    1-  616     	PAGESEL	_FD668_Command
     00A8 2rrr                      1-  617     	LCALL	_FD668_Command
                                    1-  618     	PAGESEL	$
                                    1-  619     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  620     	.line	108, "main.c"; 	FD668_DispData[0]=	DISP_BIT_B | DISP_BIT_C	| DISP_BIT_E | DISP_BIT_F| DISP_BIT_DP ; //B1;
     00A9 21B6                      1-  621     	MOVIA	0xb6
     00AA 00rr                      1-  622     	MOVAR	(_FD668_DispData + 0)
                                    1-  623     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  624     	.line	109, "main.c"; 	FD668_DispData[1]=	DISP_BIT_B | DISP_BIT_C	| DISP_BIT_E | DISP_BIT_F;
     00AB 2136                      1-  625     	MOVIA	0x36
     00AC 00rr                      1-  626     	MOVAR	(_FD668_DispData + 1)
                                    1-  627     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  628     	.line	110, "main.c"; 	FD668_DispData[2]=	DISP_BIT_B | DISP_BIT_C	| DISP_BIT_E | DISP_BIT_F| DISP_BIT_DP ; //B3;
     00AD 21B6                      1-  629     	MOVIA	0xb6
     00AE 00rr                      1-  630     	MOVAR	(_FD668_DispData + 2)
                                    1-  631     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  632     	.line	111, "main.c"; 	FD668_DispData[3]=	DISP_BIT_B | DISP_BIT_C	| DISP_BIT_E | DISP_BIT_F;
     00AF 2136                      1-  633     	MOVIA	0x36
     00B0 00rr                      1-  634     	MOVAR	(_FD668_DispData + 3)
                                    1-  635     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  636     	.line	112, "main.c"; 	FD668_DispData[4]=	DISP_BIT_A | DISP_BIT_C | DISP_BIT_F | DISP_BIT_G;  						 // B5 B7 B10 B11
     00B1 2165                      1-  637     	MOVIA	0x65
     00B2 00rr                      1-  638     	MOVAR	(_FD668_DispData + 4)
                                    1-  639     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  640     	.line	113, "main.c"; 	FD668_DispData[5]=	DISP_BIT_C | DISP_BIT_D | DISP_BIT_G | DISP_BIT_DP;  						 // W27 W28 W31 W32
     00B3 21CC                      1-  641     	MOVIA	0xcc
     00B4 00rr                      1-  642     	MOVAR	(_FD668_DispData + 5)
                                    1-  643     ;;gen.c:6748: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  644     	.line	114, "main.c"; 	FD668_DispData[6]=	0x00;														 						 										 // DP1 DP2	
     00B5 02rr                      1-  645     	CLRR	(_FD668_DispData + 6)
                                    1-  646     	.line	115, "main.c"; 	FD668_WrDisp_AddrINC(0x00);
     00B6 2100                      1-  647     	MOVIA	0x00
                                    1-  648     	PAGESEL	_FD668_WrDisp_AddrINC
     00B7 2rrr                      1-  649     	LCALL	_FD668_WrDisp_AddrINC
                                    1-  650     	PAGESEL	$
     00B8                           1-  651     _00125_DS_:
                                    1-  652     	.line	121, "main.c"; 	}
                                    1-  653     	RETURN	
     00B8 0010                      4-   19 m1      ret
                                    1-  654     ; exit point of _FD668_DispTest
                                    1-  656     ;***
                                    1-  657     ;  pBlock Stats: dbName = C
                                    1-  658     ;***
                                    1-  659     ;has an exit
                                    1-  660     ;functions called:
                                    1-  661     ;   _FD668_Command
                                    1-  662     ;   _FD668_Command
                                    1-  663     ;   __gptrput1
                                    1-  664     ;   _FD668_WrDisp_AddrINC
                                    1-  665     ;   _FD668_Command
                                    1-  666     ;   _FD668_Command
                                    1-  667     ;   __gptrput1
                                    1-  668     ;   _FD668_WrDisp_AddrINC
                                    1-  669     ;   _FD668_Command
                                    1-  670     ;   _FD668_Command
                                    1-  671     ;   __gptrput1
                                    1-  672     ;   _FD668_WrDisp_AddrINC
                                    1-  673     ;   _FD668_Command
                                    1-  674     ;   _FD668_Command
                                    1-  675     ;   __gptrput1
                                    1-  676     ;   _FD668_WrDisp_AddrINC
                                    1-  677     ;6 compiler assigned registers:
                                    1-  678     ;   r0x100A
                                    1-  679     ;   r0x100B
                                    1-  680     ;   r0x100C
                                    1-  681     ;   STK02
                                    1-  682     ;   STK01
                                    1-  683     ;   STK00
                                    1-  684     ;; Starting pCode block
                                    1-  685     .segment "code"; module=main, function=_FD668_init
                                    1-  687     ;local variable name mapping:
     0000                           1-  689     _FD668_init:
                                    1-  690     ; 2 exit points
                                    1-  691     	.line	15, "main.c"; 	CHOOSEONE;
     0000 02rr                      1-  692     	CLRR	_ChooseFlg
                                    1-  693     	.line	16, "main.c"; 	FD668_7DIG_MODE;
     0001 2103                      1-  694     	MOVIA	0x03
                                    1-  695     	PAGESEL	_FD668_Command
     0002 2rrr                      1-  696     	LCALL	_FD668_Command
                                    1-  697     	PAGESEL	$
                                    1-  698     	.line	17, "main.c"; 	FD668_Disp_Brightness_SET(0x08 |britness);
     0003 210F                      1-  699     	MOVIA	0x0f
     0004 10rr                      1-  700     	ANDAR	_britness,W
     0005 00rr                      1-  701     	MOVAR	r0x100A
     0006 2188                      1-  702     	MOVIA	0x88
     0007 11rr                      1-  703     	IORAR	r0x100A,F
     0008 01rr                      1-  704     	MOVR	r0x100A,W
                                    1-  705     	PAGESEL	_FD668_Command
     0009 2rrr                      1-  706     	LCALL	_FD668_Command
                                    1-  707     	PAGESEL	$
                                    1-  708     	.line	18, "main.c"; 	for(i=0;i<7;i++)
     000A 02rr                      1-  709     	CLRR	r0x100A
     000B                           1-  710     _00107_DS_:
                                    1-  711     	.line	20, "main.c"; 	FD668_DispData[i]=0xff ;
     000B 01rr                      1-  712     	MOVR	r0x100A,W
     000C 25rr                      1-  713     	ADDIA	(_FD668_DispData + 0)
     000D 00rr                      1-  714     	MOVAR	r0x100B
     000E 21rr                      1-  715     	MOVIA	((_FD668_DispData + 0) >> 8) & 0xff
     000F 0C03                      1-  716     	BTRSC	STATUS,0
     0010 2501                      1-  717     	ADDIA	0x01
     0011 00rr                      1-  718     	MOVAR	r0x100C
     0012 21FF                      1-  719     	MOVIA	0xff
     0013 00rr                      1-  720     	MOVAR	STK02
     0014 01rr                      1-  721     	MOVR	r0x100B,W
     0015 00rr                      1-  722     	MOVAR	STK01
     0016 01rr                      1-  723     	MOVR	r0x100C,W
     0017 00rr                      1-  724     	MOVAR	STK00
     0018 2100                      1-  725     	MOVIA	0x00
                                    1-  726     	PAGESEL	__gptrput1
     0019 2rrr                      1-  727     	LCALL	__gptrput1
                                    1-  728     	PAGESEL	$
                                    1-  729     	.line	18, "main.c"; 	for(i=0;i<7;i++)
     001A 05rr                      1-  730     	INCR	r0x100A,F
                                    1-  731     ;;unsigned compare: left < lit (0x7=7), size=1
     001B 2107                      1-  732     	MOVIA	0x07
     001C 04rr                      1-  733     	SUBAR	r0x100A,W
     001D 0803                      1-  734     	BTRSS	STATUS,0
     001E 3rrr                      1-  735     	LGOTO	_00107_DS_
                                    1-  736     ;;genSkipc:3392: created from rifx:025A6160
                                    1-  737     	.line	22, "main.c"; 	FD668_WrDisp_AddrINC(0x00);
     001F 2100                      1-  738     	MOVIA	0x00
                                    1-  739     	PAGESEL	_FD668_WrDisp_AddrINC
     0020 2rrr                      1-  740     	LCALL	_FD668_WrDisp_AddrINC
                                    1-  741     	PAGESEL	$
                                    1-  742     	.line	24, "main.c"; 	CHOOSETWO;
     0021 2101                      1-  743     	MOVIA	0x01
     0022 00rr                      1-  744     	MOVAR	_ChooseFlg
                                    1-  745     	.line	25, "main.c"; 	FD668_7DIG_MODE;
     0023 2103                      1-  746     	MOVIA	0x03
                                    1-  747     	PAGESEL	_FD668_Command
     0024 2rrr                      1-  748     	LCALL	_FD668_Command
                                    1-  749     	PAGESEL	$
                                    1-  750     	.line	26, "main.c"; 	FD668_Disp_Brightness_SET(0x08 |britness);
     0025 210F                      1-  751     	MOVIA	0x0f
     0026 10rr                      1-  752     	ANDAR	_britness,W
     0027 00rr                      1-  753     	MOVAR	r0x100A
     0028 2188                      1-  754     	MOVIA	0x88
     0029 11rr                      1-  755     	IORAR	r0x100A,F
     002A 01rr                      1-  756     	MOVR	r0x100A,W
                                    1-  757     	PAGESEL	_FD668_Command
     002B 2rrr                      1-  758     	LCALL	_FD668_Command
                                    1-  759     	PAGESEL	$
                                    1-  760     	.line	27, "main.c"; 	for(i=0;i<7;i++)
     002C 02rr                      1-  761     	CLRR	r0x100A
     002D                           1-  762     _00109_DS_:
                                    1-  763     	.line	29, "main.c"; 	FD668_DispData[i]=0xff ;
     002D 01rr                      1-  764     	MOVR	r0x100A,W
     002E 25rr                      1-  765     	ADDIA	(_FD668_DispData + 0)
     002F 00rr                      1-  766     	MOVAR	r0x100B
     0030 21rr                      1-  767     	MOVIA	((_FD668_DispData + 0) >> 8) & 0xff
     0031 0C03                      1-  768     	BTRSC	STATUS,0
     0032 2501                      1-  769     	ADDIA	0x01
     0033 00rr                      1-  770     	MOVAR	r0x100C
     0034 21FF                      1-  771     	MOVIA	0xff
     0035 00rr                      1-  772     	MOVAR	STK02
     0036 01rr                      1-  773     	MOVR	r0x100B,W
     0037 00rr                      1-  774     	MOVAR	STK01
     0038 01rr                      1-  775     	MOVR	r0x100C,W
     0039 00rr                      1-  776     	MOVAR	STK00
     003A 2100                      1-  777     	MOVIA	0x00
                                    1-  778     	PAGESEL	__gptrput1
     003B 2rrr                      1-  779     	LCALL	__gptrput1
                                    1-  780     	PAGESEL	$
                                    1-  781     	.line	27, "main.c"; 	for(i=0;i<7;i++)
     003C 05rr                      1-  782     	INCR	r0x100A,F
                                    1-  783     ;;unsigned compare: left < lit (0x7=7), size=1
     003D 2107                      1-  784     	MOVIA	0x07
     003E 04rr                      1-  785     	SUBAR	r0x100A,W
     003F 0803                      1-  786     	BTRSS	STATUS,0
     0040 3rrr                      1-  787     	LGOTO	_00109_DS_
                                    1-  788     ;;genSkipc:3392: created from rifx:025A6160
                                    1-  789     	.line	31, "main.c"; 	FD668_WrDisp_AddrINC(0x00);	
     0041 2100                      1-  790     	MOVIA	0x00
                                    1-  791     	PAGESEL	_FD668_WrDisp_AddrINC
     0042 2rrr                      1-  792     	LCALL	_FD668_WrDisp_AddrINC
                                    1-  793     	PAGESEL	$
                                    1-  794     	.line	32, "main.c"; 	}
                                    1-  795     	RETURN	
     0043 0010                      4-   19 m1      ret
                                    1-  796     ; exit point of _FD668_init
                                    1-  799     ;	code size estimation:
                                    1-  800     ;	  289+   68 =   357 instructions (  850 byte)
                                    1-  802     	end

SYMBOL TABLE            TYPE     VALUE
__gptrput1              Label    00000000
__processor__           Constant 00800513
__sdcc_gsinit_startup   Label    00000000
_00107_DS_              Label    0000000B
_00109_DS_              Label    0000002D
_00114_DS_              Label    00000010
_00117_DS_              Label    00000054
_00118_DS_              Label    00000087
_00121_DS_              Label    0000001B
_00123_DS_              Label    0000003D
_00125_DS_              Label    000000B8
_00145_DS_              Label    0000000D
_00154_DS_              Label    00000010
_00158_DS_              Label    00000012
_00163_DS_              Label    00000020
_00169_DS_              Label    00000002
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_britness               Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_ChooseFlg              Label    00000000
_delay                  Label    00000000
_Delay10us              Label    00000000
_FD668_Command          Label    00000000
_FD668_DispData         Label    00000000
_FD668_DispTest         Label    00000000
_FD668_init             Label    00000000
_FD668_Init             Label    00000000
_FD668_WrByte           Label    00000000
_FD668_WrDisp_AddrINC   Label    00000000
_FD668_WrDisp_AddrStaticLabel    00000000
_FSR                    Label    00000000
_gpio_config            Label    00000000
_INDF                   Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_KeyNum                 Label    00000000
_led_init               Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_protect_data_enble     Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
BPHCON                  Constant 0000000C
BPLCON                  Constant 0000000B
BWUCON                  Constant 00000009
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
INTE                    Constant 0000000E
INTF                    Constant 0000000F
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PCON                    Constant 00000008
PORTB                   Constant 00000006
PSAVE                   Label    00000000
r0x100A                 Label    00000000
r0x100B                 Label    00000000
r0x100C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
TMR0                    Constant 00000001
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8A051D.inc
003 ny8a051a.inc
004 common.inc
005 main.c

PROCESSOR    = NY8A051D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
