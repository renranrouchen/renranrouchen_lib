
                    Nyquest Technology Co., Ltd.

NYASM 2.14

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"F628.c"
                                    1-    8     	list	p=ny8A051D,c=on
                                    1-    9     	#include "ny8A051D.inc"
                                    2-    2     #include "ny8a051a.inc"
                                    3-    1     ;; header file for NY8A051A assembly
                                    3-    2     ;;
                                    3-    3     ;; author    Ting
                                    3-    4     ;; date      2017.04.18
                                    3-    5     ;;/
                                    3-    7     #include "common.inc"
                                    4-    1     ;;----------------------------------------------
                                    4-    2     ;; header file for 8 bit series assembly
                                    4-    3     ;; author    Ting
                                    4-    4     ;; date      2017.04.11
                                    4-    5     ;;----------------------------------------------
                                    4-    6     ;;
                                    4-    7     ;; # constant definition
                                    4-    8     ;;
                                    4-    9     ;; ## instruction result store destination
                                    4-   10     ;;  - W: the result is stored in the ACC.
                                    4-   11     ;;  - F: the result is stored back in register.
                                    4-   12     ;;
                                    4-   13     W       EQU 0
                                    4-   13     ;W = 0
                                    4-   14     F       EQU 1
                                    4-   14     ;F = 1
                                    4-   16     ;; ## return from subroutine
                                    4-   17     ;;
                                    4-   18     RETURN      macro
                                    4-   19 M       ret
                                    4-   20 M       endm
                                    4-   22     ; vim:ft=asm:expandtab
                                    3-    9     ;; ## R-page SFR
                                    3-   10     ;;
                                    3-   11     INDF    EQU 0x0
                                    3-   11     ;INDF = 0
                                    3-   12     TMR0    EQU 0x1
                                    3-   12     ;TMR0 = 1
                                    3-   13     PCL     EQU 0x2
                                    3-   13     ;PCL = 2
                                    3-   14     STATUS  EQU 0x3
                                    3-   14     ;STATUS = 3
                                    3-   15     FSR     EQU 0x4
                                    3-   15     ;FSR = 4
                                    3-   17     PORTB   EQU 0x6
                                    3-   17     ;PORTB = 6
                                    3-   19     PCON    EQU 0x8
                                    3-   19     ;PCON = 8
                                    3-   20     BWUCON  EQU 0x9
                                    3-   20     ;BWUCON = 9
                                    3-   21     PCHBUF  EQU 0xa
                                    3-   21     ;PCHBUF = 10
                                    3-   22     BPLCON  EQU 0xb
                                    3-   22     ;BPLCON = 11
                                    3-   23     BPHCON  EQU 0xc
                                    3-   23     ;BPHCON = 12
                                    3-   25     INTE    EQU 0xe
                                    3-   25     ;INTE = 14
                                    3-   26     INTF    EQU 0xf
                                    3-   26     ;INTF = 15
                                    3-   28     ;; # macro
                                    3-   29     ;;
                                    3-   30     ;; macro use by SDCC
                                    3-   31     PAGESEL     macro   rom_address
                                    3-   32 M       endm
                                    3-   34     BANKSEL     macro   ram_address
                                    3-   35 M       endm
                                    3-   37     ; vim:ft=asm:expandtab
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_FD668_WrDisp_AddrStatic
                                    1-   15     	extern	_FD668_Init
                                    1-   16     	extern	_gpio_config
                                    1-   17     	extern	_led_init
                                    1-   18     	extern	_protect_data_enble
                                    1-   19     	extern	_ChooseFlg
                                    1-   20     	extern	_PORTBbits
                                    1-   21     	extern	_PCONbits
                                    1-   22     	extern	_BWUCONbits
                                    1-   23     	extern	_BPLCONbits
                                    1-   24     	extern	_BPHCONbits
                                    1-   25     	extern	_INTEbits
                                    1-   26     	extern	_INTFbits
                                    1-   27     	extern	_INDF
                                    1-   28     	extern	_TMR0
                                    1-   29     	extern	_PCL
                                    1-   30     	extern	_STATUS
                                    1-   31     	extern	_FSR
                                    1-   32     	extern	_PORTB
                                    1-   33     	extern	_PCON
                                    1-   34     	extern	_BWUCON
                                    1-   35     	extern	_PCHBUF
                                    1-   36     	extern	_BPLCON
                                    1-   37     	extern	_BPHCON
                                    1-   38     	extern	_INTE
                                    1-   39     	extern	_INTF
                                    1-   40     	extern	_TMR1
                                    1-   41     	extern	_T1CR1
                                    1-   42     	extern	_T1CR2
                                    1-   43     	extern	_PWM1DUTY
                                    1-   44     	extern	_PS1CV
                                    1-   45     	extern	_BZ1CR
                                    1-   46     	extern	_IRCR
                                    1-   47     	extern	_TBHP
                                    1-   48     	extern	_TBHD
                                    1-   49     	extern	_OSCCR
                                    1-   50     	extern	_IOSTB
                                    1-   51     	extern	_PS0CV
                                    1-   52     	extern	_BODCON
                                    1-   53     	extern	_PCON1
                                    1-   54     	extern	_T0MD
                                    1-   55     	extern	__gptrget1
                                    1-   57     	extern PSAVE
                                    1-   58     	extern SSAVE
                                    1-   59     	extern WSAVE
                                    1-   60     	extern STK12
                                    1-   61     	extern STK11
                                    1-   62     	extern STK10
                                    1-   63     	extern STK09
                                    1-   64     	extern STK08
                                    1-   65     	extern STK07
                                    1-   66     	extern STK06
                                    1-   67     	extern STK05
                                    1-   68     	extern STK04
                                    1-   69     	extern STK03
                                    1-   70     	extern STK02
                                    1-   71     	extern STK01
                                    1-   72     	extern STK00
                                    1-   73     ;--------------------------------------------------------
                                    1-   74     ; global declarations
                                    1-   75     ;--------------------------------------------------------
                                    1-   76     	extern	_FD668_WrDisp_AddrINC
                                    1-   77     	extern	_FD668_Command
                                    1-   78     	extern	_FD668_WrByte
                                    1-   79     	extern	_Delay10us
                                    1-   80     	extern	_delay
                                    1-   81     	extern	_delay_us
                                    1-   82     	extern	_FD668_CHOOSE_STB_SET
                                    1-   83     	extern	_FD668_CHOOSE_STB_CLR
                                    1-   84     	extern	_FD668_DispData
                                    1-   86     ;--------------------------------------------------------
                                    1-   87     ; global definitions
                                    1-   88     ;--------------------------------------------------------
                                    1-   89     ;--------------------------------------------------------
                                    1-   90     ; absolute symbol definitions
                                    1-   91     ;--------------------------------------------------------
                                    1-   92     ;--------------------------------------------------------
                                    1-   93     ; compiler-defined variables
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     .segment "uninit"
     0000                           1-   96     r0x1014:
                                    1-   97     	.res	1
                                    1-   98     .segment "uninit"
     0000                           1-   99     r0x1013:
                                    1-  100     	.res	1
                                    1-  101     .segment "uninit"
     0000                           1-  102     r0x1015:
                                    1-  103     	.res	1
                                    1-  104     .segment "uninit"
     0000                           1-  105     r0x1016:
                                    1-  106     	.res	1
                                    1-  107     .segment "uninit"
     0000                           1-  108     r0x1017:
                                    1-  109     	.res	1
                                    1-  110     .segment "uninit"
     0000                           1-  111     r0x1009:
                                    1-  112     	.res	1
                                    1-  113     .segment "uninit"
     0000                           1-  114     r0x1008:
                                    1-  115     	.res	1
                                    1-  116     .segment "uninit"
     0000                           1-  117     r0x100A:
                                    1-  118     	.res	1
                                    1-  119     .segment "uninit"
     0000                           1-  120     r0x100B:
                                    1-  121     	.res	1
                                    1-  122     .segment "uninit"
     0000                           1-  123     r0x100C:
                                    1-  124     	.res	1
                                    1-  125     .segment "uninit"
     0000                           1-  126     r0x100D:
                                    1-  127     	.res	1
                                    1-  128     .segment "uninit"
     0000                           1-  129     r0x100E:
                                    1-  130     	.res	1
                                    1-  131     .segment "uninit"
     0000                           1-  132     r0x100F:
                                    1-  133     	.res	1
                                    1-  134     .segment "uninit"
     0000                           1-  135     r0x1010:
                                    1-  136     	.res	1
                                    1-  137     .segment "uninit"
     0000                           1-  138     r0x1011:
                                    1-  139     	.res	1
                                    1-  140     ;--------------------------------------------------------
                                    1-  141     ; initialized data
                                    1-  142     ;--------------------------------------------------------
                                    1-  144     .segment "idata"
     0000                           1-  145     _FD668_DispData:
     0000 0000                      1-  146     	dw	0x00
     0001 0000                      1-  147     	dw	0x00
     0002 0000                      1-  148     	dw	0x00
     0003 0000                      1-  149     	dw	0x00
     0004 0000                      1-  150     	dw	0x00
     0005 0000                      1-  151     	dw	0x00
     0006 0000                      1-  152     	dw	0x00
                                    1-  155     ;--------------------------------------------------------
                                    1-  156     ; overlayable items in internal ram 
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ;	udata_ovr
                                    1-  159     ;--------------------------------------------------------
                                    1-  160     ; code
                                    1-  161     ;--------------------------------------------------------
                                    1-  162     ;***
                                    1-  163     ;  pBlock Stats: dbName = C
                                    1-  164     ;***
                                    1-  165     ;has an exit
                                    1-  166     ;functions called:
                                    1-  167     ;   _FD668_Command
                                    1-  168     ;   _FD668_Start
                                    1-  169     ;   _FD668_WrByte
                                    1-  170     ;   __gptrget1
                                    1-  171     ;   _FD668_WrByte
                                    1-  172     ;   _FD668_WrByte
                                    1-  173     ;   _FD668_Stop
                                    1-  174     ;   _FD668_Command
                                    1-  175     ;   _FD668_Start
                                    1-  176     ;   _FD668_WrByte
                                    1-  177     ;   __gptrget1
                                    1-  178     ;   _FD668_WrByte
                                    1-  179     ;   _FD668_WrByte
                                    1-  180     ;   _FD668_Stop
                                    1-  181     ;6 compiler assigned registers:
                                    1-  182     ;   r0x100F
                                    1-  183     ;   r0x1010
                                    1-  184     ;   r0x1011
                                    1-  185     ;   STK01
                                    1-  186     ;   STK00
                                    1-  187     ;   r0x1012
                                    1-  188     ;; Starting pCode block
                                    1-  189     .segment "code"; module=F628, function=_FD668_WrDisp_AddrINC
                                    1-  191     ;local variable name mapping:
     0000                           1-  194     _FD668_WrDisp_AddrINC:
                                    1-  195     ; 2 exit points
                                    1-  196     	.line	136, "F628.c"; 	char FD668_WrDisp_AddrINC(uint8 Addr )
     0000 00rr                      1-  197     	MOVAR	r0x100F
                                    1-  198     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  199     ;;unsigned compare: left >= lit (0xF=15), size=1
                                    1-  200     	.line	139, "F628.c"; 	if(Addr>14) return(1);
     0001 210F                      1-  201     	MOVIA	0x0f
     0002 04rr                      1-  202     	SUBAR	r0x100F,W
     0003 0803                      1-  203     	BTRSS	STATUS,0
     0004 3rrr                      1-  204     	LGOTO	_00179_DS_
                                    1-  205     ;;genSkipc:3392: created from rifx:025A6160
     0005 2101                      1-  206     	MOVIA	0x01
     0006 3rrr                      1-  207     	LGOTO	_00184_DS_
     0007                           1-  208     _00179_DS_:
                                    1-  209     	.line	140, "F628.c"; 	FD668_Command(FD668_ADDR_INC_DIGWR_CMD);
     0007 2140                      1-  210     	MOVIA	0x40
                                    1-  211     	PAGESEL	_FD668_Command
     0008 2rrr                      1-  212     	LCALL	_FD668_Command
                                    1-  213     	PAGESEL	$
                                    1-  214     	.line	141, "F628.c"; 	FD668_Start();
                                    1-  215     	PAGESEL	_FD668_Start
     0009 2rrr                      1-  216     	LCALL	_FD668_Start
                                    1-  217     	PAGESEL	$
                                    1-  218     	.line	142, "F628.c"; 	FD668_WrByte(FD668_DIGADDR_WRCMD|Addr);
     000A 21C0                      1-  219     	MOVIA	0xc0
     000B 11rr                      1-  220     	IORAR	r0x100F,W
     000C 00rr                      1-  221     	MOVAR	r0x1010
                                    1-  222     	PAGESEL	_FD668_WrByte
     000D 2rrr                      1-  223     	LCALL	_FD668_WrByte
                                    1-  224     	PAGESEL	$
                                    1-  225     ;;unsigned compare: left < lit (0x7=7), size=1
     000E                           1-  226     _00182_DS_:
                                    1-  227     	.line	143, "F628.c"; 	for(i=Addr;i < 7;i++)
     000E 2107                      1-  228     	MOVIA	0x07
     000F 04rr                      1-  229     	SUBAR	r0x100F,W
     0010 0C03                      1-  230     	BTRSC	STATUS,0
     0011 3rrr                      1-  231     	LGOTO	_00180_DS_
                                    1-  232     ;;genSkipc:3392: created from rifx:025A6160
                                    1-  233     	.line	146, "F628.c"; 	FD668_WrByte(FD668_DispData[i]);
     0012 01rr                      1-  234     	MOVR	r0x100F,W
     0013 25rr                      1-  235     	ADDIA	(_FD668_DispData + 0)
     0014 00rr                      1-  236     	MOVAR	r0x1010
     0015 21rr                      1-  237     	MOVIA	((_FD668_DispData + 0) >> 8) & 0xff
     0016 0C03                      1-  238     	BTRSC	STATUS,0
     0017 2501                      1-  239     	ADDIA	0x01
     0018 00rr                      1-  240     	MOVAR	r0x1011
     0019 01rr                      1-  241     	MOVR	r0x1010,W
     001A 00rr                      1-  242     	MOVAR	STK01
     001B 01rr                      1-  243     	MOVR	r0x1011,W
     001C 00rr                      1-  244     	MOVAR	STK00
     001D 2100                      1-  245     	MOVIA	0x00
                                    1-  246     	PAGESEL	__gptrget1
     001E 2rrr                      1-  247     	LCALL	__gptrget1
                                    1-  248     	PAGESEL	$
                                    1-  249     ;;1	MOVAR	r0x1012
                                    1-  250     	PAGESEL	_FD668_WrByte
     001F 2rrr                      1-  251     	LCALL	_FD668_WrByte
                                    1-  252     	PAGESEL	$
                                    1-  253     	.line	147, "F628.c"; 	FD668_WrByte(0x00);
     0020 2100                      1-  254     	MOVIA	0x00
                                    1-  255     	PAGESEL	_FD668_WrByte
     0021 2rrr                      1-  256     	LCALL	_FD668_WrByte
                                    1-  257     	PAGESEL	$
                                    1-  258     	.line	143, "F628.c"; 	for(i=Addr;i < 7;i++)
     0022 05rr                      1-  259     	INCR	r0x100F,F
     0023 3rrr                      1-  260     	LGOTO	_00182_DS_
     0024                           1-  261     _00180_DS_:
                                    1-  262     	.line	149, "F628.c"; 	FD668_Stop();
                                    1-  263     	PAGESEL	_FD668_Stop
     0024 2rrr                      1-  264     	LCALL	_FD668_Stop
                                    1-  265     	PAGESEL	$
                                    1-  266     	.line	150, "F628.c"; 	return(0);
     0025 2100                      1-  267     	MOVIA	0x00
     0026                           1-  268     _00184_DS_:
                                    1-  269     	.line	151, "F628.c"; 	}
                                    1-  270     	RETURN	
     0026 0010                      4-   19 m1      ret
                                    1-  271     ; exit point of _FD668_WrDisp_AddrINC
                                    1-  273     ;***
                                    1-  274     ;  pBlock Stats: dbName = C
                                    1-  275     ;***
                                    1-  276     ;has an exit
                                    1-  277     ;functions called:
                                    1-  278     ;   _FD668_Start
                                    1-  279     ;   _FD668_WrByte
                                    1-  280     ;   _FD668_Stop
                                    1-  281     ;   _FD668_Start
                                    1-  282     ;   _FD668_WrByte
                                    1-  283     ;   _FD668_Stop
                                    1-  284     ;1 compiler assigned register :
                                    1-  285     ;   r0x100E
                                    1-  286     ;; Starting pCode block
                                    1-  287     .segment "code"; module=F628, function=_FD668_Command
                                    1-  289     ;local variable name mapping:
     0000                           1-  291     _FD668_Command:
                                    1-  292     ; 2 exit points
                                    1-  293     	.line	129, "F628.c"; 	void FD668_Command(uint8 CMD)
     0000 00rr                      1-  294     	MOVAR	r0x100E
                                    1-  295     	.line	131, "F628.c"; 	FD668_Start();
                                    1-  296     	PAGESEL	_FD668_Start
     0001 2rrr                      1-  297     	LCALL	_FD668_Start
                                    1-  298     	PAGESEL	$
                                    1-  299     	.line	132, "F628.c"; 	FD668_WrByte(CMD);
     0002 01rr                      1-  300     	MOVR	r0x100E,W
                                    1-  301     	PAGESEL	_FD668_WrByte
     0003 2rrr                      1-  302     	LCALL	_FD668_WrByte
                                    1-  303     	PAGESEL	$
                                    1-  304     	.line	133, "F628.c"; 	FD668_Stop();
                                    1-  305     	PAGESEL	_FD668_Stop
     0004 2rrr                      1-  306     	LCALL	_FD668_Stop
                                    1-  307     	PAGESEL	$
                                    1-  308     	.line	134, "F628.c"; 	}
                                    1-  309     	RETURN	
     0005 0010                      4-   19 m1      ret
                                    1-  310     ; exit point of _FD668_Command
                                    1-  312     ;***
                                    1-  313     ;  pBlock Stats: dbName = C
                                    1-  314     ;***
                                    1-  315     ;has an exit
                                    1-  316     ;functions called:
                                    1-  317     ;   _delay_us
                                    1-  318     ;   _delay_us
                                    1-  319     ;   _delay_us
                                    1-  320     ;   _delay_us
                                    1-  321     ;3 compiler assigned registers:
                                    1-  322     ;   r0x100C
                                    1-  323     ;   r0x100D
                                    1-  324     ;   STK00
                                    1-  325     ;; Starting pCode block
                                    1-  326     .segment "code"; module=F628, function=_FD668_WrByte
                                    1-  328     ;local variable name mapping:
     0000                           1-  331     _FD668_WrByte:
                                    1-  332     ; 2 exit points
                                    1-  333     	.line	68, "F628.c"; 	void FD668_WrByte( uint8 dat )
     0000 00rr                      1-  334     	MOVAR	r0x100C
                                    1-  335     	.line	72, "F628.c"; 	for( i = 0; i < 8; i++ )	   				/* 输出8 bit的数据 */        
     0001 02rr                      1-  336     	CLRR	r0x100D
     0002                           1-  337     _00169_DS_:
                                    1-  338     	.line	74, "F628.c"; 	FD668_CLK_CLR;					  		/* 设置CLK为低电平 */
     0002 1Crr                      1-  339     	BCR	_PORTB,1
                                    1-  340     	.line	75, "F628.c"; 	if( dat & 0x01 ) 						/* 数据从低位到高位输出 */
     0003 08rr                      1-  341     	BTRSS	r0x100C,0
     0004 3rrr                      1-  342     	LGOTO	_00166_DS_
                                    1-  343     	.line	77, "F628.c"; 	FD668_DIO_SET;		    			/* 设置DIO为高电平 */
     0005 18rr                      1-  344     	BSR	_PORTB,0
     0006 3rrr                      1-  345     	LGOTO	_00167_DS_
     0007                           1-  346     _00166_DS_:
                                    1-  347     	.line	81, "F628.c"; 	FD668_DIO_CLR;						/* 设置DIO为低电平 */
     0007 1Crr                      1-  348     	BCR	_PORTB,0
     0008                           1-  349     _00167_DS_:
                                    1-  350     	.line	83, "F628.c"; 	delay_us(1);
     0008 2101                      1-  351     	MOVIA	0x01
     0009 00rr                      1-  352     	MOVAR	STK00
     000A 2100                      1-  353     	MOVIA	0x00
                                    1-  354     	PAGESEL	_delay_us
     000B 2rrr                      1-  355     	LCALL	_delay_us
                                    1-  356     	PAGESEL	$
                                    1-  357     	.line	85, "F628.c"; 	FD668_CLK_SET;							/* 设置SCL为高电平 上升沿写入*/
     000C 18rr                      1-  358     	BSR	_PORTB,1
                                    1-  359     ;;shiftRight_Left2ResultLit:5458: shCount=1, size=1, sign=0, same=1, offr=0
                                    1-  360     	.line	86, "F628.c"; 	dat >>= 1;								/* 输出数据右移一位，数据从低到高的输出 */
     000D 1C03                      1-  361     	BCR	STATUS,0
     000E 13rr                      1-  362     	RRR	r0x100C,F
                                    1-  363     	.line	87, "F628.c"; 	delay_us(1);
     000F 2101                      1-  364     	MOVIA	0x01
     0010 00rr                      1-  365     	MOVAR	STK00
     0011 2100                      1-  366     	MOVIA	0x00
                                    1-  367     	PAGESEL	_delay_us
     0012 2rrr                      1-  368     	LCALL	_delay_us
                                    1-  369     	PAGESEL	$
                                    1-  370     	.line	72, "F628.c"; 	for( i = 0; i < 8; i++ )	   				/* 输出8 bit的数据 */        
     0013 05rr                      1-  371     	INCR	r0x100D,F
                                    1-  372     ;;unsigned compare: left < lit (0x8=8), size=1
     0014 2108                      1-  373     	MOVIA	0x08
     0015 04rr                      1-  374     	SUBAR	r0x100D,W
     0016 0803                      1-  375     	BTRSS	STATUS,0
     0017 3rrr                      1-  376     	LGOTO	_00169_DS_
                                    1-  377     ;;genSkipc:3392: created from rifx:025A6160
                                    1-  378     	.line	90, "F628.c"; 	}
                                    1-  379     	RETURN	
     0018 0010                      4-   19 m1      ret
                                    1-  380     ; exit point of _FD668_WrByte
                                    1-  382     ;***
                                    1-  383     ;  pBlock Stats: dbName = C
                                    1-  384     ;***
                                    1-  385     ;has an exit
                                    1-  386     ;functions called:
                                    1-  387     ;   _Delay10us
                                    1-  388     ;   _FD668_CHOOSE_STB_SET
                                    1-  389     ;   _Delay10us
                                    1-  390     ;   _Delay10us
                                    1-  391     ;   _FD668_CHOOSE_STB_SET
                                    1-  392     ;   _Delay10us
                                    1-  393     ;; Starting pCode block
                                    1-  394     .segment "code"; module=F628, function=_FD668_Stop
     0000                           1-  396     _FD668_Stop:
                                    1-  397     ; 2 exit points
                                    1-  398     	.line	53, "F628.c"; 	FD668_CLK_SET;						  /* 设置CLK为高电平 */
     0000 18rr                      1-  399     	BSR	_PORTB,1
                                    1-  400     	.line	54, "F628.c"; 	FD668_DELAY_STB;
                                    1-  401     	PAGESEL	_Delay10us
     0001 2rrr                      1-  402     	LCALL	_Delay10us
                                    1-  403     	PAGESEL	$
                                    1-  404     	.line	55, "F628.c"; 	FD668_STB_SET;  					  /* 设置STB为高电平 */
                                    1-  405     	PAGESEL	_FD668_CHOOSE_STB_SET
     0002 2rrr                      1-  406     	LCALL	_FD668_CHOOSE_STB_SET
                                    1-  407     	PAGESEL	$
                                    1-  408     	.line	56, "F628.c"; 	FD668_DIO_SET;						  /* 设置DIO为高电平 */
     0003 18rr                      1-  409     	BSR	_PORTB,0
                                    1-  410     	.line	58, "F628.c"; 	FD668_DELAY_BUF;					  /* 通信结束到下一次通信开始的间隔 */
                                    1-  411     	PAGESEL	_Delay10us
     0004 2rrr                      1-  412     	LCALL	_Delay10us
                                    1-  413     	PAGESEL	$
                                    1-  414     	.line	59, "F628.c"; 	}
                                    1-  415     	RETURN	
     0005 0010                      4-   19 m1      ret
                                    1-  416     ; exit point of _FD668_Stop
                                    1-  418     ;***
                                    1-  419     ;  pBlock Stats: dbName = C
                                    1-  420     ;***
                                    1-  421     ;has an exit
                                    1-  422     ;functions called:
                                    1-  423     ;   _FD668_CHOOSE_STB_CLR
                                    1-  424     ;   _Delay10us
                                    1-  425     ;   _FD668_CHOOSE_STB_CLR
                                    1-  426     ;   _Delay10us
                                    1-  427     ;; Starting pCode block
                                    1-  428     .segment "code"; module=F628, function=_FD668_Start
     0000                           1-  430     _FD668_Start:
                                    1-  431     ; 2 exit points
                                    1-  432     	.line	39, "F628.c"; 	FD668_STB_CLR;  				  /* 设置STB为低电平 */
                                    1-  433     	PAGESEL	_FD668_CHOOSE_STB_CLR
     0000 2rrr                      1-  434     	LCALL	_FD668_CHOOSE_STB_CLR
                                    1-  435     	PAGESEL	$
                                    1-  436     	.line	42, "F628.c"; 	FD668_DELAY_STB;	
                                    1-  437     	PAGESEL	_Delay10us
     0001 2rrr                      1-  438     	LCALL	_Delay10us
                                    1-  439     	PAGESEL	$
                                    1-  440     	.line	43, "F628.c"; 	}
                                    1-  441     	RETURN	
     0002 0010                      4-   19 m1      ret
                                    1-  442     ; exit point of _FD668_Start
                                    1-  444     ;***
                                    1-  445     ;  pBlock Stats: dbName = C
                                    1-  446     ;***
                                    1-  447     ;has an exit
                                    1-  448     ;; Starting pCode block
                                    1-  449     .segment "code"; module=F628, function=_FD668_CHOOSE_STB_CLR
     0000                           1-  451     _FD668_CHOOSE_STB_CLR:
                                    1-  452     ; 2 exit points
                                    1-  453     	.line	30, "F628.c"; 	if (ChooseFlg) BC(PORTB,4);
     0000 01rr                      1-  454     	MOVR	_ChooseFlg,W
     0001 0D03                      1-  455     	BTRSC	STATUS,2
     0002 3rrr                      1-  456     	LGOTO	_00150_DS_
     0003 1Err                      1-  457     	BCR	_PORTB,4
     0004 3rrr                      1-  458     	LGOTO	_00152_DS_
     0005                           1-  459     _00150_DS_:
                                    1-  460     	.line	31, "F628.c"; 	else 		 			 BC(PORTB,2);
     0005 1Drr                      1-  461     	BCR	_PORTB,2
     0006                           1-  462     _00152_DS_:
                                    1-  463     	.line	32, "F628.c"; 	}
                                    1-  464     	RETURN	
     0006 0010                      4-   19 m1      ret
                                    1-  465     ; exit point of _FD668_CHOOSE_STB_CLR
                                    1-  467     ;***
                                    1-  468     ;  pBlock Stats: dbName = C
                                    1-  469     ;***
                                    1-  470     ;has an exit
                                    1-  471     ;; Starting pCode block
                                    1-  472     .segment "code"; module=F628, function=_FD668_CHOOSE_STB_SET
     0000                           1-  474     _FD668_CHOOSE_STB_SET:
                                    1-  475     ; 2 exit points
                                    1-  476     	.line	24, "F628.c"; 	if (ChooseFlg) BS(PORTB,4); 
     0000 01rr                      1-  477     	MOVR	_ChooseFlg,W
     0001 0D03                      1-  478     	BTRSC	STATUS,2
     0002 3rrr                      1-  479     	LGOTO	_00142_DS_
     0003 1Arr                      1-  480     	BSR	_PORTB,4
     0004 3rrr                      1-  481     	LGOTO	_00144_DS_
     0005                           1-  482     _00142_DS_:
                                    1-  483     	.line	25, "F628.c"; 	else 		 			 BS(PORTB,2);
     0005 19rr                      1-  484     	BSR	_PORTB,2
     0006                           1-  485     _00144_DS_:
                                    1-  486     	.line	26, "F628.c"; 	}
                                    1-  487     	RETURN	
     0006 0010                      4-   19 m1      ret
                                    1-  488     ; exit point of _FD668_CHOOSE_STB_SET
                                    1-  490     ;***
                                    1-  491     ;  pBlock Stats: dbName = C
                                    1-  492     ;***
                                    1-  493     ;has an exit
                                    1-  494     ;functions called:
                                    1-  495     ;   _delay_us
                                    1-  496     ;   _delay_us
                                    1-  497     ;1 compiler assigned register :
                                    1-  498     ;   STK00
                                    1-  499     ;; Starting pCode block
                                    1-  500     .segment "code"; module=F628, function=_Delay10us
     0000                           1-  502     _Delay10us:
                                    1-  503     ; 2 exit points
                                    1-  504     	.line	19, "F628.c"; 	delay_us(1);
     0000 2101                      1-  505     	MOVIA	0x01
     0001 00rr                      1-  506     	MOVAR	STK00
     0002 2100                      1-  507     	MOVIA	0x00
                                    1-  508     	PAGESEL	_delay_us
     0003 2rrr                      1-  509     	LCALL	_delay_us
                                    1-  510     	PAGESEL	$
                                    1-  511     	.line	20, "F628.c"; 	}
                                    1-  512     	RETURN	
     0004 0010                      4-   19 m1      ret
                                    1-  513     ; exit point of _Delay10us
                                    1-  515     ;***
                                    1-  516     ;  pBlock Stats: dbName = C
                                    1-  517     ;***
                                    1-  518     ;has an exit
                                    1-  519     ;5 compiler assigned registers:
                                    1-  520     ;   r0x1008
                                    1-  521     ;   STK00
                                    1-  522     ;   r0x1009
                                    1-  523     ;   r0x100A
                                    1-  524     ;   r0x100B
                                    1-  525     ;; Starting pCode block
                                    1-  526     .segment "code"; module=F628, function=_delay_us
                                    1-  528     ;local variable name mapping:
     0000                           1-  533     _delay_us:
                                    1-  534     ; 2 exit points
                                    1-  535     	.line	11, "F628.c"; 	void delay_us(unsigned int num)
     0000 00rr                      1-  536     	MOVAR	r0x1008
     0001 01rr                      1-  537     	MOVR	STK00,W
     0002 00rr                      1-  538     	MOVAR	r0x1009
                                    1-  539     	.line	14, "F628.c"; 	for(kk = 0;kk<=num;kk++);
     0003 02rr                      1-  540     	CLRR	r0x100A
     0004 02rr                      1-  541     	CLRR	r0x100B
     0005                           1-  542     _00125_DS_:
     0005 05rr                      1-  543     	INCR	r0x100A,F
     0006 0D03                      1-  544     	BTRSC	STATUS,2
     0007 05rr                      1-  545     	INCR	r0x100B,F
     0008 01rr                      1-  546     	MOVR	r0x100B,W
     0009 04rr                      1-  547     	SUBAR	r0x1008,W
     000A 0903                      1-  548     	BTRSS	STATUS,2
     000B 3rrr                      1-  549     	LGOTO	_00132_DS_
     000C 01rr                      1-  550     	MOVR	r0x100A,W
     000D 04rr                      1-  551     	SUBAR	r0x1009,W
     000E                           1-  552     _00132_DS_:
     000E 0C03                      1-  553     	BTRSC	STATUS,0
     000F 3rrr                      1-  554     	LGOTO	_00125_DS_
                                    1-  555     ;;genSkipc:3392: created from rifx:025A6160
                                    1-  556     	.line	15, "F628.c"; 	}
                                    1-  557     	RETURN	
     0010 0010                      4-   19 m1      ret
                                    1-  558     ; exit point of _delay_us
                                    1-  560     ;***
                                    1-  561     ;  pBlock Stats: dbName = C
                                    1-  562     ;***
                                    1-  563     ;has an exit
                                    1-  564     ;6 compiler assigned registers:
                                    1-  565     ;   r0x1013
                                    1-  566     ;   STK00
                                    1-  567     ;   r0x1014
                                    1-  568     ;   r0x1015
                                    1-  569     ;   r0x1016
                                    1-  570     ;   r0x1017
                                    1-  571     ;; Starting pCode block
                                    1-  572     .segment "code"; module=F628, function=_delay
                                    1-  574     ;local variable name mapping:
     0000                           1-  579     _delay:
                                    1-  580     ; 2 exit points
                                    1-  581     	.line	5, "F628.c"; 	void delay(int count) //延时21.6us
     0000 00rr                      1-  582     	MOVAR	r0x1013
     0001 01rr                      1-  583     	MOVR	STK00,W
     0002 00rr                      1-  584     	MOVAR	r0x1014
                                    1-  585     	.line	8, "F628.c"; 	for(i=1;i<=count;i++)
     0003 2101                      1-  586     	MOVIA	0x01
     0004 00rr                      1-  587     	MOVAR	r0x1015
     0005 02rr                      1-  588     	CLRR	r0x1016
     0006                           1-  589     _00107_DS_:
     0006 01rr                      1-  590     	MOVR	r0x1013,W
     0007 2580                      1-  591     	ADDIA	0x80
     0008 00rr                      1-  592     	MOVAR	r0x1017
     0009 01rr                      1-  593     	MOVR	r0x1016,W
     000A 2580                      1-  594     	ADDIA	0x80
     000B 04rr                      1-  595     	SUBAR	r0x1017,W
     000C 0903                      1-  596     	BTRSS	STATUS,2
     000D 3rrr                      1-  597     	LGOTO	_00118_DS_
     000E 01rr                      1-  598     	MOVR	r0x1015,W
     000F 04rr                      1-  599     	SUBAR	r0x1014,W
     0010                           1-  600     _00118_DS_:
     0010 0803                      1-  601     	BTRSS	STATUS,0
     0011 3rrr                      1-  602     	LGOTO	_00109_DS_
                                    1-  603     ;;genSkipc:3392: created from rifx:025A6160
     0012 05rr                      1-  604     	INCR	r0x1015,F
     0013 0D03                      1-  605     	BTRSC	STATUS,2
     0014 05rr                      1-  606     	INCR	r0x1016,F
     0015 3rrr                      1-  607     	LGOTO	_00107_DS_
     0016                           1-  608     _00109_DS_:
                                    1-  609     	.line	10, "F628.c"; 	}
                                    1-  610     	RETURN	
     0016 0010                      4-   19 m1      ret
                                    1-  611     ; exit point of _delay
                                    1-  614     ;	code size estimation:
                                    1-  615     ;	  138+   36 =   174 instructions (  420 byte)
                                    1-  617     	end

SYMBOL TABLE            TYPE     VALUE
__gptrget1              Label    00000000
__processor__           Constant 00800513
_00107_DS_              Label    00000006
_00109_DS_              Label    00000016
_00118_DS_              Label    00000010
_00125_DS_              Label    00000005
_00132_DS_              Label    0000000E
_00142_DS_              Label    00000005
_00144_DS_              Label    00000006
_00150_DS_              Label    00000005
_00152_DS_              Label    00000006
_00166_DS_              Label    00000007
_00167_DS_              Label    00000008
_00169_DS_              Label    00000002
_00179_DS_              Label    00000007
_00180_DS_              Label    00000024
_00182_DS_              Label    0000000E
_00184_DS_              Label    00000026
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_ChooseFlg              Label    00000000
_delay                  Label    00000000
_delay_us               Label    00000000
_Delay10us              Label    00000000
_FD668_CHOOSE_STB_CLR   Label    00000000
_FD668_CHOOSE_STB_SET   Label    00000000
_FD668_Command          Label    00000000
_FD668_DispData         Label    00000000
_FD668_Init             Label    00000000
_FD668_Start            Label    00000000
_FD668_Stop             Label    00000000
_FD668_WrByte           Label    00000000
_FD668_WrDisp_AddrINC   Label    00000000
_FD668_WrDisp_AddrStaticLabel    00000000
_FSR                    Label    00000000
_gpio_config            Label    00000000
_INDF                   Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_led_init               Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_protect_data_enble     Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
BPHCON                  Constant 0000000C
BPLCON                  Constant 0000000B
BWUCON                  Constant 00000009
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
INTE                    Constant 0000000E
INTF                    Constant 0000000F
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PCON                    Constant 00000008
PORTB                   Constant 00000006
PSAVE                   Label    00000000
r0x1008                 Label    00000000
r0x1009                 Label    00000000
r0x100A                 Label    00000000
r0x100B                 Label    00000000
r0x100C                 Label    00000000
r0x100D                 Label    00000000
r0x100E                 Label    00000000
r0x100F                 Label    00000000
r0x1010                 Label    00000000
r0x1011                 Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
SSAVE                   Label    00000000
STATUS                  Constant 00000003
STK00                   Label    00000000
STK01                   Label    00000000
STK02                   Label    00000000
STK03                   Label    00000000
STK04                   Label    00000000
STK05                   Label    00000000
STK06                   Label    00000000
STK07                   Label    00000000
STK08                   Label    00000000
STK09                   Label    00000000
STK10                   Label    00000000
STK11                   Label    00000000
STK12                   Label    00000000
TMR0                    Constant 00000001
W                       Constant 00000000
WSAVE                   Label    00000000


SOURCE FILE TABLE
001 F628.s
002 ny8A051D.inc
003 ny8a051a.inc
004 common.inc
005 F628.c

PROCESSOR    = NY8A051D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
